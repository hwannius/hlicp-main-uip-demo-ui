/*
 * App URI: app/240228/UW006
 * Source Location: app/240228/UW006.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function() {
	var app = new cpr.core.App("app/240228/UW006", { 
		onPrepare: function(loader) {
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports) {
			var linker = {};
			// Start - User Script
			/************************************************
			 * UW006.js
			 * Created at 2024. 2. 28. 오전 11:39:02.
			 *
			 * @author ryu
			 ************************************************/;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("ds1");
			dataSet_1.parseData({
				"columns": [
					{"name": "column1"},
					{"name": "column2"},
					{"name": "column3"}
				],
				"rows": [
					{"column1": "최근 3개월 이내에...?", "column2": "치료", "column3": "예"},
					{"column1": "", "column2": "입원", "column3": "예"},
					{"column1": "최근..?", "column2": "", "column3": "예"}
				]
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("ds2");
			dataSet_2.parseData({
				"columns": [
					{"name": "column1"},
					{"name": "column2"},
					{"name": "column3"},
					{"name": "column4"},
					{"name": "column5"},
					{"name": "column6"},
					{"name": "column7"},
					{"name": "column8"},
					{"name": "column9"}
				],
				"rows": [
					{"column1": "양성신생물,양성종양-결장,직장,항문\n(대장용종)", "column2": "입원 3일", "column3": "2022-11-01 ~ 2022-11-13", "column4": "", "column5": "예", "column6": "예 (치료완료)", "column7": "약물복용", "column8": "있음", "column9": ""},
					{"column1": "양성신생물,양성종양-결장,직장,항문\n(대장용종)", "column2": "통원 2일", "column3": "2022-12-03 ~ 2022-12-05", "column4": "", "column5": "예", "column6": "예 (치료완료)", "column7": "약물복용", "column8": "있음", "column9": ""},
					{"column1": "양성신생물,양성종양-결장,직장,항문\n(대장용종)", "column2": "수술 2회", "column3": "2019-05-08 ~ 2022-04-20", "column4": "", "column5": "예", "column6": "예 (치료완료)", "column7": "동반질환", "column8": "없음", "column9": ""},
					{"column1": "척추병증\n(척추협착증)", "column2": "통원 5일", "column3": "2023-02-01 ~ 2023-02-07", "column4": "", "column5": "아니오", "column6": "아니오 (치료중)", "column7": "", "column8": "", "column9": "경추부 (해당신경 포함)\n요추부(해당신청 포함)\n천골부 및 마골부 (해당신경 포함)"},
					{"column1": "결핵", "column2": "통원", "column3": "", "column4": "202109", "column5": "아니오", "column6": "후유장애 또는 합병증 없음", "column7": "동반질환", "column8": "있음", "column9": ""}
				]
			});
			app.register(dataSet_2);
			app.supportMedia("all and (min-width: 3160px)", "Hlicp-WIDE");
			app.supportMedia("all and (min-width: 1600px) and (max-width: 3159px)", "Hlicp-FULL");
			app.supportMedia("all and (min-width: 790px) and (max-width: 1599px)", "Hlicp-DIV");
			app.supportMedia("all and (max-width: 789px)", "Hlicp-POP");
			
			// Configure root container
			var container = app.getContainer();
			container.style.setClasses(["grid-window-body"]);
			container.style.css({
				"width" : "100%",
				"height" : "100%"
			});
			
			// Layout
			var verticalLayout_1 = new cpr.controls.layouts.VerticalLayout();
			verticalLayout_1.spacing = 0;
			verticalLayout_1.leftMargin = 20;
			verticalLayout_1.rightMargin = 20;
			verticalLayout_1.topMargin = 20;
			verticalLayout_1.bottomMargin = 10;
			container.setLayout(verticalLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container("grpAppTitle");
			group_1.style.setClasses(["app-title"]);
			var formLayout_1 = new cpr.controls.layouts.FormLayout();
			formLayout_1.scrollable = false;
			formLayout_1.topMargin = "0px";
			formLayout_1.rightMargin = "0px";
			formLayout_1.bottomMargin = "0px";
			formLayout_1.leftMargin = "0px";
			formLayout_1.horizontalSpacing = "0px";
			formLayout_1.verticalSpacing = "0px";
			formLayout_1.setColumns(["1fr"]);
			formLayout_1.setRows(["1fr"]);
			group_1.setLayout(formLayout_1);
			(function(container){
				var output_1 = new cpr.controls.Output("optTitle2");
				output_1.value = "심사메인화면";
				output_1.style.setClasses(["navi-left"]);
				container.addChild(output_1, {
					"colIndex": 0,
					"rowIndex": 0
				});
			})(group_1);
			container.addChild(group_1, {
				"autoSize": "height",
				"width": "3008px",
				"height": "35px"
			});
			
			var group_2 = new cpr.controls.Container("grpBOdy");
			var verticalLayout_2 = new cpr.controls.layouts.VerticalLayout();
			verticalLayout_2.spacing = 15;
			group_2.setLayout(verticalLayout_2);
			(function(container){
				var group_3 = new cpr.controls.Container();
				var verticalLayout_3 = new cpr.controls.layouts.VerticalLayout();
				verticalLayout_3.spacing = 8;
				group_3.setLayout(verticalLayout_3);
				(function(container){
					var group_4 = new cpr.controls.Container();
					group_4.style.setClasses(["grid-box", "box-spacing-free"]);
					var verticalLayout_4 = new cpr.controls.layouts.VerticalLayout();
					verticalLayout_4.spacing = 4;
					group_4.setLayout(verticalLayout_4);
					(function(container){
						var grid_1 = new cpr.controls.Grid("grd1");
						grid_1.readOnly = true;
						grid_1.init({
							"dataSet": app.lookup("ds1"),
							"columnMovable": true,
							"autoFit": "1, 2, 3",
							"resizableColumns": "1, 2, 3",
							"columns": [
								{"width": "48px"},
								{"width": "200px"},
								{"width": "150px"},
								{"width": "60px"}
							],
							"header": {
								"rows": [{"height": "31px"}],
								"cells": [
									{
										"constraint": {"rowIndex": 0, "colIndex": 0},
										"configurator": function(cell){
											cell.filterable = false;
											cell.sortable = false;
											cell.text = "NO";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 1},
										"configurator": function(cell){
											cell.filterable = false;
											cell.sortable = false;
											cell.targetColumnName = "column1";
											cell.text = "질문";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 2},
										"configurator": function(cell){
											cell.filterable = false;
											cell.sortable = false;
											cell.targetColumnName = "column2";
											cell.text = "답변";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 3},
										"configurator": function(cell){
											cell.filterable = false;
											cell.sortable = false;
											cell.targetColumnName = "column3";
											cell.text = "답변내용";
										}
									}
								]
							},
							"detail": {
								"rows": [{"height": "31px"}],
								"cells": [
									{
										"constraint": {"rowIndex": 0, "colIndex": 0},
										"configurator": function(cell){
											cell.columnType = "rowindex";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 1},
										"configurator": function(cell){
											cell.columnName = "column1";
											cell.control = (function(){
												var output_2 = new cpr.controls.Output();
												output_2.value = "Output";
												output_2.bind("value").toDataColumn("column1");
												return output_2;
											})();
											cell.controlConstraint = {};
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 2},
										"configurator": function(cell){
											cell.columnName = "column2";
											cell.control = (function(){
												var output_3 = new cpr.controls.Output();
												output_3.value = "Output";
												output_3.bind("value").toDataColumn("column2");
												return output_3;
											})();
											cell.controlConstraint = {};
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 3},
										"configurator": function(cell){
											cell.columnName = "column3";
											cell.control = (function(){
												var output_4 = new cpr.controls.Output();
												output_4.value = "Output";
												output_4.style.setClasses(["text-center"]);
												output_4.bind("value").toDataColumn("column3");
												return output_4;
											})();
											cell.controlConstraint = {};
										}
									}
								]
							}
						});
						grid_1.style.setClasses(["list-normal"]);
						container.addChild(grid_1, {
							"width": "400px",
							"height": "127px"
						});
					})(group_4);
					container.addChild(group_4, {
						"autoSize": "height",
						"width": "729px",
						"height": "152px"
					});
				})(group_3);
				container.addChild(group_3, {
					"autoSize": "height",
					"width": "729px",
					"height": "152px"
				});
				var group_5 = new cpr.controls.Container();
				var verticalLayout_5 = new cpr.controls.layouts.VerticalLayout();
				verticalLayout_5.spacing = 8;
				group_5.setLayout(verticalLayout_5);
				(function(container){
					var group_6 = new cpr.controls.Container();
					group_6.style.setClasses(["grid-box"]);
					var verticalLayout_6 = new cpr.controls.layouts.VerticalLayout();
					verticalLayout_6.spacing = 4;
					group_6.setLayout(verticalLayout_6);
					(function(container){
						var grid_2 = new cpr.controls.Grid("grd2");
						grid_2.readOnly = true;
						grid_2.init({
							"dataSet": app.lookup("ds2"),
							"autoRowHeight": "all",
							"columnMovable": true,
							"autoFit": "1, 2, 3, 4, 5, 6, 7, 8, 9",
							"resizableColumns": "all",
							"suppressedCellType": "merged",
							"columns": [
								{
									"width": "48px",
									"visible": false
								},
								{"width": "200px"},
								{"width": "80+"},
								{"width": "165px"},
								{"width": "100px"},
								{"width": "60px"},
								{"width": "100px"},
								{"width": "80px"},
								{"width": "80px"},
								{"width": "180px"}
							],
							"header": {
								"rows": [
									{"height": "31px"},
									{"height": "31px"}
								],
								"cells": [
									{
										"constraint": {"rowIndex": 0, "colIndex": 0, "rowSpan": 2, "colSpan": 1},
										"configurator": function(cell){
											cell.filterable = false;
											cell.sortable = false;
											cell.text = "NO";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 1, "rowSpan": 2, "colSpan": 1},
										"configurator": function(cell){
											cell.filterable = false;
											cell.sortable = false;
											cell.targetColumnName = "column1";
											cell.text = "질병명";
										}
									},
									{
										"constraint": {"rowIndex": 1, "colIndex": 2, "rowSpan": 1, "colSpan": 1},
										"configurator": function(cell){
											cell.filterable = false;
											cell.sortable = false;
											cell.targetColumnName = "column2";
											cell.text = "치료방법";
										}
									},
									{
										"constraint": {"rowIndex": 1, "colIndex": 3, "rowSpan": 1, "colSpan": 1},
										"configurator": function(cell){
											cell.filterable = false;
											cell.sortable = false;
											cell.targetColumnName = "column3";
											cell.text = "치료기간";
										}
									},
									{
										"constraint": {"rowIndex": 1, "colIndex": 4, "rowSpan": 1, "colSpan": 1},
										"configurator": function(cell){
											cell.filterable = false;
											cell.sortable = false;
											cell.targetColumnName = "column4";
											cell.text = "지급정보 사고일자";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 5, "rowSpan": 2, "colSpan": 1},
										"configurator": function(cell){
											cell.filterable = false;
											cell.sortable = false;
											cell.targetColumnName = "column5";
											cell.text = "재발여부";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 6, "rowSpan": 2, "colSpan": 1},
										"configurator": function(cell){
											cell.filterable = false;
											cell.sortable = false;
											cell.targetColumnName = "column6";
											cell.text = "완치여부";
										}
									},
									{
										"constraint": {"rowIndex": 1, "colIndex": 7, "rowSpan": 1, "colSpan": 1},
										"configurator": function(cell){
											cell.filterable = false;
											cell.sortable = false;
											cell.targetColumnName = "column7";
											cell.text = "질문";
										}
									},
									{
										"constraint": {"rowIndex": 1, "colIndex": 8, "rowSpan": 1, "colSpan": 1},
										"configurator": function(cell){
											cell.filterable = false;
											cell.sortable = false;
											cell.targetColumnName = "column8";
											cell.text = "답변";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 9, "rowSpan": 2, "colSpan": 1},
										"configurator": function(cell){
											cell.filterable = false;
											cell.sortable = false;
											cell.targetColumnName = "column9";
											cell.text = "해당부위";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 2, "rowSpan": 1, "colSpan": 3},
										"configurator": function(cell){
											cell.text = "치료내용";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 7, "rowSpan": 1, "colSpan": 2},
										"configurator": function(cell){
											cell.text = "추가질문";
										}
									}
								]
							},
							"detail": {
								"rows": [{"height": "31px"}],
								"cells": [
									{
										"constraint": {"rowIndex": 0, "colIndex": 0},
										"configurator": function(cell){
											cell.columnType = "rowindex";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 1},
										"configurator": function(cell){
											cell.columnName = "column1";
											cell.suppressible = true;
											cell.control = (function(){
												var output_5 = new cpr.controls.Output();
												output_5.value = "Output";
												output_5.style.setClasses(["text-center"]);
												output_5.bind("value").toDataColumn("column1");
												return output_5;
											})();
											cell.controlConstraint = {};
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 2},
										"configurator": function(cell){
											cell.columnName = "column2";
											cell.control = (function(){
												var output_6 = new cpr.controls.Output();
												output_6.value = "Output";
												output_6.style.setClasses(["text-center"]);
												output_6.bind("value").toDataColumn("column2");
												return output_6;
											})();
											cell.controlConstraint = {};
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 3},
										"configurator": function(cell){
											cell.columnName = "column3";
											cell.control = (function(){
												var output_7 = new cpr.controls.Output();
												output_7.value = "Output";
												output_7.style.setClasses(["text-center"]);
												output_7.bind("value").toDataColumn("column3");
												return output_7;
											})();
											cell.controlConstraint = {};
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 4},
										"configurator": function(cell){
											cell.columnName = "column4";
											cell.control = (function(){
												var output_8 = new cpr.controls.Output();
												output_8.value = "Output";
												output_8.dataType = "date";
												output_8.format = "YYYY-MM";
												output_8.style.setClasses(["text-center"]);
												output_8.bind("value").toDataColumn("column4");
												return output_8;
											})();
											cell.controlConstraint = {};
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 5},
										"configurator": function(cell){
											cell.columnName = "column5";
											cell.suppressible = true;
											cell.control = (function(){
												var output_9 = new cpr.controls.Output();
												output_9.value = "Output";
												output_9.bind("value").toDataColumn("column5");
												return output_9;
											})();
											cell.controlConstraint = {};
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 6},
										"configurator": function(cell){
											cell.columnName = "column6";
											cell.suppressible = true;
											cell.control = (function(){
												var output_10 = new cpr.controls.Output();
												output_10.value = "Output";
												output_10.bind("value").toDataColumn("column6");
												return output_10;
											})();
											cell.controlConstraint = {};
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 7},
										"configurator": function(cell){
											cell.columnName = "column7";
											cell.suppressible = true;
											cell.control = (function(){
												var output_11 = new cpr.controls.Output();
												output_11.value = "Output";
												output_11.bind("value").toDataColumn("column7");
												return output_11;
											})();
											cell.controlConstraint = {};
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 8},
										"configurator": function(cell){
											cell.columnName = "column8";
											cell.suppressible = true;
											cell.control = (function(){
												var output_12 = new cpr.controls.Output();
												output_12.value = "Output";
												output_12.bind("value").toDataColumn("column8");
												return output_12;
											})();
											cell.controlConstraint = {};
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 9},
										"configurator": function(cell){
											cell.columnName = "column9";
											cell.control = (function(){
												var output_13 = new cpr.controls.Output();
												output_13.value = "Output";
												output_13.bind("value").toDataColumn("column9");
												return output_13;
											})();
											cell.controlConstraint = {};
										}
									}
								]
							}
						});
						grid_2.style.setClasses(["list-normal", "table-at"]);
						container.addChild(grid_2, {
							"autoSize": "height",
							"width": "400px",
							"height": "320px"
						});
					})(group_6);
					container.addChild(group_6, {
						"autoSize": "height",
						"width": "1600px",
						"height": "350px"
					});
				})(group_5);
				container.addChild(group_5, {
					"autoSize": "height",
					"width": "767px",
					"height": "350px"
				});
			})(group_2);
			container.addChild(group_2, {
				"autoSize": "height",
				"width": "729px",
				"height": "517px"
			});
		}
	});
	app.title = "알릴사항조회";
	cpr.core.Platform.INSTANCE.register(app);
})();
