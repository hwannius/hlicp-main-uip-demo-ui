/*
 * App URI: sample/Report 미리보기
 * Source Location: sample/Report 미리보기.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function() {
	var app = new cpr.core.App("sample/Report 미리보기", { 
		onPrepare: function(loader) {
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports) {
			var linker = {};
			// Start - User Script
			/************************************************
			 * Report 미리보기.js
			 * Created at 2024. 1. 25. 오후 3:55:28.
			 *
			 * @author yein
			 ************************************************/

			/*
			 * "닫기" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButtonClick(e){
				var button = e.control;
				
				app.close()
			};
			// End - User Script
			
			// Header
			app.supportMedia("all and (min-width: 3160px)", "Hlicp-WIDE");
			app.supportMedia("all and (min-width: 1600px) and (max-width: 3159px)", "Hlicp-FULL");
			app.supportMedia("all and (min-width: 790px) and (max-width: 1599px)", "Hlicp-DIV");
			app.supportMedia("all and (max-width: 789px)", "Hlicp-POP");
			
			// Configure root container
			var container = app.getContainer();
			container.style.setClasses(["pop-content-body"]);
			container.style.css({
				"width" : "100%",
				"height" : "100%"
			});
			
			// Layout
			var verticalLayout_1 = new cpr.controls.layouts.VerticalLayout();
			container.setLayout(verticalLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container();
			var verticalLayout_2 = new cpr.controls.layouts.VerticalLayout();
			verticalLayout_2.spacing = 15;
			group_1.setLayout(verticalLayout_2);
			(function(container){
				var group_2 = new cpr.controls.Container();
				group_2.style.setClasses(["grid-box"]);
				var verticalLayout_3 = new cpr.controls.layouts.VerticalLayout();
				verticalLayout_3.spacing = 4;
				group_2.setLayout(verticalLayout_3);
				(function(container){
					var group_3 = new cpr.controls.Container();
					group_3.style.setClasses(["button-table-area"]);
					var formLayout_1 = new cpr.controls.layouts.FormLayout();
					formLayout_1.scrollable = false;
					formLayout_1.topMargin = "0px";
					formLayout_1.rightMargin = "0px";
					formLayout_1.bottomMargin = "0px";
					formLayout_1.leftMargin = "0px";
					formLayout_1.horizontalSpacing = "0px";
					formLayout_1.verticalSpacing = "0px";
					formLayout_1.setColumns(["0px", "1fr"]);
					formLayout_1.setColumnAutoSizing(0, true);
					formLayout_1.setRows(["1fr"]);
					group_3.setLayout(formLayout_1);
					(function(container){
						var group_4 = new cpr.controls.Container();
						group_4.style.setClasses(["grid-title-box"]);
						var verticalLayout_4 = new cpr.controls.layouts.VerticalLayout();
						verticalLayout_4.spacing = 0;
						group_4.setLayout(verticalLayout_4);
						container.addChild(group_4, {
							"colIndex": 0,
							"rowIndex": 0
						});
						var group_5 = new cpr.controls.Container();
						group_5.style.setClasses(["button-table-top-area"]);
						var flowLayout_1 = new cpr.controls.layouts.FlowLayout();
						flowLayout_1.scrollable = false;
						flowLayout_1.horizontalSpacing = 5;
						flowLayout_1.verticalSpacing = 5;
						flowLayout_1.horizontalAlign = "right";
						flowLayout_1.lineWrap = false;
						group_5.setLayout(flowLayout_1);
						(function(container){
							var button_1 = new cpr.controls.Button();
							button_1.value = "엑셀보내기";
							button_1.style.setClasses(["btn-primary04"]);
							container.addChild(button_1, {
								"autoSize": "width",
								"width": "100px",
								"height": "26px"
							});
							var button_2 = new cpr.controls.Button();
							button_2.value = "문자보내기";
							button_2.style.setClasses(["btn-primary04"]);
							container.addChild(button_2, {
								"autoSize": "width",
								"width": "100px",
								"height": "26px"
							});
							var button_3 = new cpr.controls.Button();
							button_3.value = "닫기";
							button_3.style.setClasses(["btn-secondary01"]);
							if(typeof onButtonClick == "function") {
								button_3.addEventListener("click", onButtonClick);
							}
							container.addChild(button_3, {
								"autoSize": "width",
								"width": "43px",
								"height": "26px"
							});
						})(group_5);
						container.addChild(group_5, {
							"colIndex": 1,
							"rowIndex": 0
						});
					})(group_3);
					container.addChild(group_3, {
						"autoSize": "height",
						"width": "1600px",
						"height": "26px"
					});
					var embeddedPage_1 = new cpr.controls.EmbeddedPage("ep1");
					container.addChild(embeddedPage_1, {
						"autoSize": "height",
						"width": "320px",
						"height": "307px"
					});
				})(group_2);
				container.addChild(group_2, {
					"autoSize": "height",
					"width": "1600px",
					"height": "345px"
				});
			})(group_1);
			container.addChild(group_1, {
				"autoSize": "height",
				"width": "767px",
				"height": "345px"
			});
		}
	});
	app.title = "Report 미리보기";
	cpr.core.Platform.INSTANCE.register(app);
})();
