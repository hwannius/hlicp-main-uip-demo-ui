/*
 * App URI: pb/guide/Grid
 * Source Location: pb/guide/Grid.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function() {
	var app = new cpr.core.App("pb/guide/Grid", { 
		onPrepare: function(loader) {
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports) {
			var linker = {};
			// Start - User Script
			/************************************************
			 * Grid.js
			 * Created at 2022. 9. 28. 오전 9:24:47.
			 *
			 * @author ryu
			 ************************************************/;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsList");
			dataSet_1.parseData({
				"columns": [
					{"name": "treecell"},
					{"name": "inputbox"},
					{
						"name": "numbereditor",
						"dataType": "number",
						"info": ""
					},
					{"name": "maskeditor"},
					{"name": "searchinput"},
					{"name": "dateinput"},
					{"name": "combobox"},
					{"name": "checkbox"},
					{"name": "radiobutton"},
					{"name": "output"},
					{"name": "htmlsnippet"},
					{"name": "progress"},
					{
						"name": "level",
						"dataType": "number"
					}
				],
				"rows": [
					{"treecell": "텍스트", "inputbox": "텍스트", "numbereditor": "0", "maskeditor": "9501012000000", "searchinput": "동작구", "dateinput": "19950906", "checkbox": "true", "radiobutton": "value1", "output": "실행", "level": "1", "combobox": "value1", "progress": "0", "htmlsnippet": "텍스트"},
					{"treecell": "텍스트", "inputbox": "텍스트", "numbereditor": "10000", "maskeditor": "9501012000000", "searchinput": "동작구", "dateinput": "20220101", "combobox": "value1", "checkbox": "", "radiobutton": "value2", "output": "대기", "level": "2", "progress": "20", "htmlsnippet": "텍스트"},
					{"treecell": "텍스트", "inputbox": "텍스트", "numbereditor": "500", "maskeditor": "9501012000000", "searchinput": "종로구", "dateinput": "19990821", "combobox": "value1", "checkbox": "true", "radiobutton": "value1", "output": "대기", "level": "2", "progress": "40", "htmlsnippet": "텍스트"},
					{"treecell": "텍스트", "inputbox": "텍스트", "numbereditor": "100000", "maskeditor": "9501012000000", "searchinput": "성북구", "dateinput": "19920124", "combobox": "value1", "checkbox": "true", "radiobutton": "value3", "output": "실행", "level": "3", "progress": "60", "htmlsnippet": "텍스트"},
					{"treecell": "텍스트", "inputbox": "텍스트", "numbereditor": "35000", "maskeditor": "9501012000000", "searchinput": "송파구", "dateinput": "20170821", "combobox": "value1", "checkbox": "true", "radiobutton": "value3", "output": "완료", "level": "2", "progress": "80", "htmlsnippet": "텍스트"},
					{"treecell": "텍스트", "inputbox": "텍스트", "numbereditor": "280000", "maskeditor": "9501012000000", "searchinput": "송파구", "dateinput": "20021101", "combobox": "value1", "checkbox": "", "radiobutton": "value2", "output": "완료", "level": "1", "progress": "100", "htmlsnippet": "텍스트"},
					{"treecell": "텍스트", "inputbox": "텍스트", "numbereditor": "1000000", "maskeditor": "9501012000000", "searchinput": "광진구", "dateinput": "20131113", "combobox": "value1", "checkbox": "true", "radiobutton": "value1", "output": "완료", "level": "2", "progress": "80", "htmlsnippet": "텍스트"},
					{"treecell": "텍스트", "inputbox": "텍스트", "numbereditor": "48000", "maskeditor": "9501012000000", "searchinput": "서대문구", "dateinput": "20220101", "combobox": "value1", "checkbox": "", "radiobutton": "value2", "output": "대기", "level": "3", "progress": "60", "htmlsnippet": "텍스트"},
					{"treecell": "텍스트", "inputbox": "텍스트", "numbereditor": "0", "maskeditor": "9501012000000", "searchinput": "영등포구", "dateinput": "20191019", "combobox": "value1", "checkbox": "true", "radiobutton": "value1", "output": "실행", "level": "3", "progress": "40", "htmlsnippet": "텍스트"},
					{"treecell": "텍스트", "inputbox": "텍스트", "numbereditor": "999999", "maskeditor": "9501012000000", "searchinput": "영등포구", "dateinput": "20220101", "combobox": "value1", "checkbox": "", "radiobutton": "value3", "output": "대기", "level": "4", "progress": "20", "htmlsnippet": "텍스트"}
				]
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsItem");
			dataSet_2.parseData({
				"columns": [
					{"name": "label"},
					{"name": "value"}
				],
				"rows": [
					{"label": "아이템", "value": "value1"},
					{"label": "아이템", "value": "value2"},
					{"label": "아이템", "value": "value3"},
					{"label": "아이템", "value": "value4"},
					{"label": "아이템", "value": "value5"}
				]
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsSts");
			dataSet_3.parseData({
				"columns": [
					{"name": "column1"},
					{"name": "column2"},
					{"name": "column3"},
					{"name": "column4"},
					{"name": "column5"}
				],
				"rows": [
					{"column1": "", "column2": "", "column3": ""},
					{"column1": "", "column2": "", "column3": ""},
					{"column1": "", "column2": "", "column3": ""},
					{"column1": "", "column2": "", "column3": ""},
					{"column1": "", "column2": "", "column3": ""},
					{"column1": "", "column2": "", "column3": ""}
				]
			});
			app.register(dataSet_3);
			app.supportMedia("all and (min-width: 1644px)", "default");
			app.supportMedia("all and (max-width: 1643px)", "tablet");
			
			// Configure root container
			var container = app.getContainer();
			container.style.setClasses(["pb-body"]);
			container.style.css({
				"width" : "100%",
				"height" : "100%"
			});
			
			// Layout
			var verticalLayout_1 = new cpr.controls.layouts.VerticalLayout();
			verticalLayout_1.spacing = 14;
			container.setLayout(verticalLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container();
			group_1.style.setClasses(["pb-content"]);
			var verticalLayout_2 = new cpr.controls.layouts.VerticalLayout();
			verticalLayout_2.scrollable = false;
			verticalLayout_2.spacing = 20;
			verticalLayout_2.leftMargin = 50;
			verticalLayout_2.rightMargin = 50;
			verticalLayout_2.topMargin = 0;
			verticalLayout_2.bottomMargin = 20;
			group_1.setLayout(verticalLayout_2);
			(function(container){
				var userDefinedControl_1 = new udc.hk.pb.Breadcrumbs();
				container.addChild(userDefinedControl_1, {
					"autoSize": "height",
					"width": "1544px",
					"height": "174px"
				});
				var output_1 = new cpr.controls.Output();
				output_1.value = "\u203b 기타 지시문 작성";
				output_1.style.setClasses(["text-red"]);
				container.addChild(output_1, {
					"autoSize": "height",
					"width": "100px",
					"height": "20px",
					"minHeight": 20
				});
			})(group_1);
			container.addChild(group_1, {
				"autoSize": "height",
				"width": "1644px",
				"height": "242px"
			});
			
			var group_2 = new cpr.controls.Container();
			group_2.style.setClasses(["pb-content"]);
			var verticalLayout_3 = new cpr.controls.layouts.VerticalLayout();
			verticalLayout_3.scrollable = false;
			verticalLayout_3.spacing = 40;
			verticalLayout_3.leftMargin = 50;
			verticalLayout_3.rightMargin = 50;
			verticalLayout_3.topMargin = 50;
			verticalLayout_3.bottomMargin = 50;
			group_2.setLayout(verticalLayout_3);
			(function(container){
				var group_3 = new cpr.controls.Container();
				var verticalLayout_4 = new cpr.controls.layouts.VerticalLayout();
				verticalLayout_4.scrollable = false;
				verticalLayout_4.spacing = 14;
				group_3.setLayout(verticalLayout_4);
				(function(container){
					var userDefinedControl_2 = new udc.hk.pb.SectionTitle();
					userDefinedControl_2.title = "그리드";
					userDefinedControl_2.subText = "이전 패키지와 통일성을 위해 그리드는 기본적으로 \"list-normal\" 클래스를 부여한다.";
					container.addChild(userDefinedControl_2, {
						"width": "1544px",
						"height": "29px"
					});
					var group_4 = new cpr.controls.Container();
					var verticalLayout_5 = new cpr.controls.layouts.VerticalLayout();
					group_4.setLayout(verticalLayout_5);
					(function(container){
						var grid_1 = new cpr.controls.Grid("grd");
						grid_1.init({
							"dataSet": app.lookup("dsList"),
							"columnMovable": true,
							"autoFit": "2, 3, 4, 5, 6, 7, 8, 9, 10, 11",
							"resizableColumns": "all",
							"collapsible": true,
							"viewingMode": "button",
							"columns": [
								{"width": "32px"},
								{"width": "48px"},
								{"width": "200px"},
								{"width": "120px"},
								{"width": "120px"},
								{"width": "120px"},
								{"width": "120px"},
								{"width": "130px"},
								{"width": "120px"},
								{"width": "80px"},
								{"width": "250px"},
								{"width": "100px"}
							],
							"header": {
								"rows": [{"height": "31px"}],
								"cells": [
									{
										"constraint": {"rowIndex": 0, "colIndex": 0},
										"configurator": function(cell){
											cell.columnType = "checkbox";
											cell.filterable = false;
											cell.sortable = false;
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 1},
										"configurator": function(cell){
											cell.filterable = false;
											cell.sortable = false;
											cell.text = "NO";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 2},
										"configurator": function(cell){
											cell.filterable = false;
											cell.sortColumnName = "treecell";
											cell.sortable = false;
											cell.text = "트리셀";
											cell.style.setClasses(["highlight"]);
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 3},
										"configurator": function(cell){
											cell.sortable = true;
											cell.targetColumnName = "inputbox";
											cell.text = "인풋박스";
											cell.style.setClasses(["require"]);
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 4},
										"configurator": function(cell){
											cell.filterable = false;
											cell.sortable = true;
											cell.targetColumnName = "numbereditor";
											cell.text = "넘버에디터";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 5},
										"configurator": function(cell){
											cell.filterable = true;
											cell.sortable = true;
											cell.targetColumnName = "searchinput";
											cell.text = "서치인풋";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 6},
										"configurator": function(cell){
											cell.filterable = true;
											cell.sortable = true;
											cell.targetColumnName = "dateinput";
											cell.text = "데이트인풋";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 7},
										"configurator": function(cell){
											cell.filterable = false;
											cell.sortable = false;
											cell.targetColumnName = "maskeditor";
											cell.text = "마스크에디터";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 8},
										"configurator": function(cell){
											cell.filterable = false;
											cell.sortable = false;
											cell.targetColumnName = "combobox";
											cell.text = "콤보박스";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 9},
										"configurator": function(cell){
											cell.filterable = true;
											cell.sortable = false;
											cell.targetColumnName = "checkbox";
											cell.text = "체크박스";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 10},
										"configurator": function(cell){
											cell.filterable = false;
											cell.sortable = false;
											cell.targetColumnName = "radiobutton";
											cell.text = "라디오버튼";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 11},
										"configurator": function(cell){
											cell.filterable = true;
											cell.sortable = true;
											cell.targetColumnName = "output";
											cell.text = "아웃풋";
										}
									}
								]
							},
							"detail": {
								"rows": [{"height": "31px"}],
								"cells": [
									{
										"constraint": {"rowIndex": 0, "colIndex": 0},
										"configurator": function(cell){
											cell.columnType = "checkbox";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 1},
										"configurator": function(cell){
											cell.columnType = "rowindex";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 2},
										"configurator": function(cell){
											cell.columnName = "treecell";
											cell.control = (function(){
												var treeCell_1 = new cpr.controls.gridpart.renderer.TreeCell();
												treeCell_1.bind("level").toDataColumn("level");
												treeCell_1.bind("value").toDataColumn("treecell");
												return treeCell_1;
											})();
											cell.controlConstraint = {};
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 3},
										"configurator": function(cell){
											cell.columnName = "inputbox";
											cell.control = (function(){
												var inputBox_1 = new cpr.controls.InputBox();
												inputBox_1.bind("value").toDataColumn("inputbox");
												return inputBox_1;
											})();
											cell.controlConstraint = {};
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 4},
										"configurator": function(cell){
											cell.columnName = "numbereditor";
											cell.control = (function(){
												var numberEditor_1 = new cpr.controls.NumberEditor();
												numberEditor_1.bind("value").toDataColumn("numbereditor");
												return numberEditor_1;
											})();
											cell.controlConstraint = {};
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 5},
										"configurator": function(cell){
											cell.columnName = "searchinput";
											cell.control = (function(){
												var searchInput_1 = new cpr.controls.SearchInput();
												searchInput_1.bind("value").toDataColumn("searchinput");
												return searchInput_1;
											})();
											cell.controlConstraint = {};
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 6},
										"configurator": function(cell){
											cell.columnName = "dateinput";
											cell.control = (function(){
												var dateInput_1 = new cpr.controls.DateInput();
												dateInput_1.bind("value").toDataColumn("dateinput");
												return dateInput_1;
											})();
											cell.controlConstraint = {};
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 7},
										"configurator": function(cell){
											cell.columnName = "maskeditor";
											cell.control = (function(){
												var maskEditor_1 = new cpr.controls.MaskEditor();
												maskEditor_1.mask = "000000-0******";
												maskEditor_1.bind("value").toDataColumn("maskeditor");
												return maskEditor_1;
											})();
											cell.controlConstraint = {};
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 8},
										"configurator": function(cell){
											cell.columnName = "combobox";
											cell.control = (function(){
												var comboBox_1 = new cpr.controls.ComboBox();
												(function(comboBox_1){
													comboBox_1.setItemSet(app.lookup("dsItem"), {
														"label": "label",
														"value": "value"
													});
												})(comboBox_1);
												comboBox_1.bind("value").toDataColumn("combobox");
												return comboBox_1;
											})();
											cell.controlConstraint = {};
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 9},
										"configurator": function(cell){
											cell.columnName = "checkbox";
											cell.control = (function(){
												var checkBox_1 = new cpr.controls.CheckBox();
												checkBox_1.style.setClasses(["text-center"]);
												checkBox_1.bind("value").toDataColumn("checkbox");
												return checkBox_1;
											})();
											cell.controlConstraint = {};
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 10},
										"configurator": function(cell){
											cell.columnName = "radiobutton";
											cell.control = (function(){
												var radioButton_1 = new cpr.controls.RadioButton();
												radioButton_1.fixedWidth = false;
												radioButton_1.style.setClasses(["text-center"]);
												(function(radioButton_1){
													radioButton_1.addItem(new cpr.controls.Item("아이템", "value1"));
													radioButton_1.addItem(new cpr.controls.Item("아이템", "value2"));
													radioButton_1.addItem(new cpr.controls.Item("아이템", "value3"));
												})(radioButton_1);
												radioButton_1.bind("value").toDataColumn("radiobutton");
												return radioButton_1;
											})();
											cell.controlConstraint = {};
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 11},
										"configurator": function(cell){
											cell.columnName = "output";
											cell.control = (function(){
												var output_2 = new cpr.controls.Output();
												output_2.style.setClasses(["text-center"]);
												output_2.bind("value").toDataColumn("output");
												return output_2;
											})();
											cell.controlConstraint = {};
										}
									}
								]
							},
							"footer": {
								"rows": [
									{"height": "31px"},
									{"height": "31px"}
								],
								"cells": [
									{
										"constraint": {"rowIndex": 1, "colIndex": 0, "colSpan": 4},
										"configurator": function(cell){
											cell.expr = "\"합계\"";
										}
									},
									{
										"constraint": {"rowIndex": 1, "colIndex": 4},
										"configurator": function(cell){
											cell.expr = "getSum(\"numbereditor\")";
											cell.control = (function(){
												var output_3 = new cpr.controls.Output();
												output_3.value = "Output";
												output_3.dataType = "number";
												output_3.format = "s#,##0";
												output_3.style.setClasses(["text-right"]);
												return output_3;
											})();
											cell.controlConstraint = {};
										}
									},
									{
										"constraint": {"rowIndex": 1, "colIndex": 5, "rowSpan": 1, "colSpan": 1},
										"configurator": function(cell){
											cell.expr = "\"영등포구\"";
											cell.style.setClasses(["highlight"]);
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 0, "rowSpan": 1, "colSpan": 4},
										"configurator": function(cell){
											cell.expr = "\"부분합계\"";
											cell.style.setClasses(["sub-footer"]);
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 4},
										"configurator": function(cell){
											cell.expr = "getConditionalSum(\"searchinput == '동작구'\", \"numbereditor\")";
											cell.style.setClasses(["sub-footer"]);
											cell.control = (function(){
												var output_4 = new cpr.controls.Output();
												output_4.value = "Output";
												output_4.dataType = "number";
												output_4.format = "s#,##0";
												output_4.style.setClasses(["text-right"]);
												return output_4;
											})();
											cell.controlConstraint = {};
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 5, "rowSpan": 1, "colSpan": 1},
										"configurator": function(cell){
											cell.expr = "\"동작구\"";
											cell.style.setClasses(["sub-footer", "highlight"]);
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 8},
										"configurator": function(cell){
											cell.expr = "\"\"";
											cell.style.setClasses(["sub-footer"]);
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 9},
										"configurator": function(cell){
											cell.expr = "\"\"";
											cell.style.setClasses(["sub-footer"]);
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 10},
										"configurator": function(cell){
											cell.expr = "\"\"";
											cell.style.setClasses(["sub-footer"]);
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 11},
										"configurator": function(cell){
											cell.expr = "\"\"";
											cell.style.setClasses(["sub-footer"]);
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 6},
										"configurator": function(cell){
											cell.expr = "getConditionalRowCount(\"searchinput == '동작구'\")";
											cell.style.setClasses(["sub-footer"]);
											cell.control = (function(){
												var output_5 = new cpr.controls.Output();
												output_5.value = "Output";
												output_5.dataType = "number";
												output_5.format = "s#,##0";
												output_5.displayExp = "text + \"건\"";
												output_5.style.setClasses(["text-right"]);
												return output_5;
											})();
											cell.controlConstraint = {};
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 7},
										"configurator": function(cell){
											cell.expr = "\"\"";
											cell.style.setClasses(["sub-footer"]);
										}
									},
									{
										"constraint": {"rowIndex": 1, "colIndex": 6},
										"configurator": function(cell){
											cell.expr = "getConditionalRowCount(\"searchinput == '영등포구'\")";
											cell.control = (function(){
												var output_6 = new cpr.controls.Output();
												output_6.value = "Output";
												output_6.dataType = "number";
												output_6.format = "s#,##0";
												output_6.displayExp = "text + \"건\"";
												output_6.style.setClasses(["text-right"]);
												return output_6;
											})();
											cell.controlConstraint = {};
										}
									},
									{
										"constraint": {"rowIndex": 1, "colIndex": 7},
										"configurator": function(cell){
											cell.expr = "\"\"";
										}
									},
									{
										"constraint": {"rowIndex": 1, "colIndex": 8},
										"configurator": function(cell){
											cell.expr = "\"\"";
										}
									},
									{
										"constraint": {"rowIndex": 1, "colIndex": 9},
										"configurator": function(cell){
											cell.expr = "\"\"";
										}
									},
									{
										"constraint": {"rowIndex": 1, "colIndex": 10},
										"configurator": function(cell){
											cell.expr = "\"\"";
										}
									},
									{
										"constraint": {"rowIndex": 1, "colIndex": 11},
										"configurator": function(cell){
											cell.expr = "\"\"";
										}
									}
								]
							}
						});
						grid_1.style.setClasses(["list-normal"]);
						container.addChild(grid_1, {
							"width": "400px",
							"height": "250px"
						});
					})(group_4);
					container.addChild(group_4, {
						"autoSize": "height",
						"width": "400px",
						"height": "250px"
					});
				})(group_3);
				container.addChild(group_3, {
					"autoSize": "height",
					"width": "1544px",
					"height": "293px"
				});
				var group_5 = new cpr.controls.Container();
				var verticalLayout_6 = new cpr.controls.layouts.VerticalLayout();
				verticalLayout_6.scrollable = false;
				verticalLayout_6.spacing = 14;
				group_5.setLayout(verticalLayout_6);
				(function(container){
					var userDefinedControl_3 = new udc.hk.pb.SectionTitle();
					userDefinedControl_3.title = "기본속성";
					userDefinedControl_3.subText = "● = 사용 / ○ = 미사용 / △ = 상황에 따라 사용 / ★ = 필수로 작성";
					userDefinedControl_3.subTextStyle = "text-red";
					container.addChild(userDefinedControl_3, {
						"autoSize": "none",
						"width": "1544px",
						"height": "29px"
					});
					var group_6 = new cpr.controls.Container();
					group_6.style.setClasses(["pb-table"]);
					var formLayout_1 = new cpr.controls.layouts.FormLayout();
					formLayout_1.scrollable = false;
					formLayout_1.topMargin = "4px";
					formLayout_1.rightMargin = "4px";
					formLayout_1.bottomMargin = "4px";
					formLayout_1.leftMargin = "4px";
					formLayout_1.horizontalSpacing = "8px";
					formLayout_1.verticalSpacing = "8px";
					formLayout_1.horizontalSeparatorWidth = 1;
					formLayout_1.verticalSeparatorWidth = 1;
					formLayout_1.setColumns(["150px", "60px", "220px", "1fr"]);
					formLayout_1.setUseColumnShade(0, true);
					formLayout_1.setRows(["28px", "26px", "26px", "26px", "26px", "26px", "26px", "26px", "26px", "26px", "26px", "26px", "26px", "26px", "26px"]);
					formLayout_1.setUseRowShade(0, true);
					formLayout_1.setRowAutoSizing(1, true);
					formLayout_1.setRowAutoSizing(2, true);
					formLayout_1.setRowAutoSizing(3, true);
					formLayout_1.setRowAutoSizing(4, true);
					formLayout_1.setRowAutoSizing(5, true);
					formLayout_1.setRowAutoSizing(6, true);
					formLayout_1.setRowAutoSizing(7, true);
					formLayout_1.setRowAutoSizing(8, true);
					formLayout_1.setRowAutoSizing(9, true);
					formLayout_1.setRowAutoSizing(10, true);
					formLayout_1.setRowAutoSizing(11, true);
					formLayout_1.setRowAutoSizing(12, true);
					formLayout_1.setRowAutoSizing(13, true);
					formLayout_1.setRowAutoSizing(14, true);
					group_6.setLayout(formLayout_1);
					(function(container){
						var output_7 = new cpr.controls.Output();
						output_7.value = "속성명";
						output_7.style.setClasses(["pb-label"]);
						container.addChild(output_7, {
							"colIndex": 0,
							"rowIndex": 0
						});
						var output_8 = new cpr.controls.Output();
						output_8.value = "사용여부";
						output_8.style.setClasses(["pb-label"]);
						container.addChild(output_8, {
							"colIndex": 1,
							"rowIndex": 0
						});
						var output_9 = new cpr.controls.Output();
						output_9.value = "적용값";
						output_9.style.setClasses(["pb-label"]);
						container.addChild(output_9, {
							"colIndex": 2,
							"rowIndex": 0
						});
						var output_10 = new cpr.controls.Output();
						output_10.value = "내용";
						output_10.style.setClasses(["pb-label"]);
						container.addChild(output_10, {
							"colIndex": 3,
							"rowIndex": 0
						});
						var output_11 = new cpr.controls.Output();
						output_11.value = "autoFit";
						output_11.unselectable = false;
						output_11.style.setClasses(["pb-label"]);
						container.addChild(output_11, {
							"colIndex": 0,
							"rowIndex": 1
						});
						var output_12 = new cpr.controls.Output();
						output_12.value = "●";
						output_12.style.setClasses(["text-center"]);
						container.addChild(output_12, {
							"colIndex": 1,
							"rowIndex": 1
						});
						var output_13 = new cpr.controls.Output();
						output_13.value = "(적용할 컬럼의 인덱스)";
						output_13.style.setClasses(["text-center"]);
						container.addChild(output_13, {
							"colIndex": 2,
							"rowIndex": 1
						});
						var output_14 = new cpr.controls.Output();
						output_14.value = "지정된 너비에 맞게 셀 크기를 자동 조절.";
						container.addChild(output_14, {
							"colIndex": 3,
							"rowIndex": 1
						});
						var output_15 = new cpr.controls.Output();
						output_15.value = "autoRowHeight";
						output_15.unselectable = false;
						output_15.style.setClasses(["pb-label"]);
						container.addChild(output_15, {
							"colIndex": 0,
							"rowIndex": 2
						});
						var output_16 = new cpr.controls.Output();
						output_16.value = "△";
						output_16.style.setClasses(["text-center"]);
						container.addChild(output_16, {
							"colIndex": 1,
							"rowIndex": 2
						});
						var output_17 = new cpr.controls.Output();
						output_17.value = "(개발 공통에 따름)";
						output_17.style.setClasses(["text-center"]);
						container.addChild(output_17, {
							"colIndex": 2,
							"rowIndex": 2
						});
						var output_18 = new cpr.controls.Output();
						output_18.value = "데이터의 길이에 맞게 행의 높이를 자동 조절. 적용되지 않는 컨트롤도 있으므로 사용 전 반드시 도움말 참조";
						container.addChild(output_18, {
							"colIndex": 3,
							"rowIndex": 2
						});
						var output_19 = new cpr.controls.Output();
						output_19.value = "clickMode";
						output_19.unselectable = false;
						output_19.style.setClasses(["pb-label"]);
						container.addChild(output_19, {
							"colIndex": 0,
							"rowIndex": 3
						});
						var output_20 = new cpr.controls.Output();
						output_20.value = "●";
						output_20.style.setClasses(["text-center"]);
						container.addChild(output_20, {
							"colIndex": 1,
							"rowIndex": 3
						});
						var output_21 = new cpr.controls.Output();
						output_21.value = "\"select\" | \"edit\"";
						output_21.style.setClasses(["text-center"]);
						container.addChild(output_21, {
							"colIndex": 2,
							"rowIndex": 3
						});
						var output_22 = new cpr.controls.Output();
						output_22.value = "클릭 시 동작 설정. 클릭 시 바로 편집이 가능하도록 하려면 \"edit\" 값을 사용";
						container.addChild(output_22, {
							"colIndex": 3,
							"rowIndex": 3
						});
						var output_23 = new cpr.controls.Output();
						output_23.value = "collapsible";
						output_23.unselectable = false;
						output_23.style.setClasses(["pb-label"]);
						container.addChild(output_23, {
							"colIndex": 0,
							"rowIndex": 4
						});
						var output_24 = new cpr.controls.Output();
						output_24.value = "●";
						output_24.style.setClasses(["text-center"]);
						container.addChild(output_24, {
							"colIndex": 1,
							"rowIndex": 4
						});
						var output_25 = new cpr.controls.Output();
						output_25.value = "true | false";
						output_25.style.setClasses(["text-center"]);
						container.addChild(output_25, {
							"colIndex": 2,
							"rowIndex": 4
						});
						var output_26 = new cpr.controls.Output();
						output_26.value = "트리셀 또는 그룹핑 기능을 사용하는 경우 값을 \"true\"로 지정";
						container.addChild(output_26, {
							"colIndex": 3,
							"rowIndex": 4
						});
						var output_27 = new cpr.controls.Output();
						output_27.value = "columnMovable";
						output_27.unselectable = false;
						output_27.style.setClasses(["pb-label"]);
						container.addChild(output_27, {
							"colIndex": 0,
							"rowIndex": 5
						});
						var output_28 = new cpr.controls.Output();
						output_28.value = "●";
						output_28.style.setClasses(["text-center"]);
						container.addChild(output_28, {
							"colIndex": 1,
							"rowIndex": 5
						});
						var output_29 = new cpr.controls.Output();
						output_29.value = "true | false";
						output_29.style.setClasses(["text-center"]);
						container.addChild(output_29, {
							"colIndex": 2,
							"rowIndex": 5
						});
						var output_30 = new cpr.controls.Output();
						output_30.value = "기본적으로 탭 폴더 헤더를 항상 표시하나 상황에 따라 탭 폴더의 헤더를 숨길 수 있음";
						container.addChild(output_30, {
							"colIndex": 3,
							"rowIndex": 5
						});
						var output_31 = new cpr.controls.Output();
						output_31.value = "defaultSortMode";
						output_31.unselectable = false;
						output_31.style.setClasses(["pb-label"]);
						container.addChild(output_31, {
							"colIndex": 0,
							"rowIndex": 6
						});
						var output_32 = new cpr.controls.Output();
						output_32.value = "●";
						output_32.style.setClasses(["text-center"]);
						container.addChild(output_32, {
							"colIndex": 1,
							"rowIndex": 6
						});
						var output_33 = new cpr.controls.Output();
						output_33.value = "\"multi\" | \"single\"";
						output_33.style.setClasses(["text-center"]);
						container.addChild(output_33, {
							"colIndex": 2,
							"rowIndex": 6
						});
						var output_34 = new cpr.controls.Output();
						output_34.value = "다중지원 헤더 클릭 시에 대한 기본 동작을 설정.";
						container.addChild(output_34, {
							"colIndex": 3,
							"rowIndex": 6
						});
						var output_35 = new cpr.controls.Output();
						output_35.value = "fieldLabel";
						output_35.unselectable = false;
						output_35.style.setClasses(["pb-label"]);
						container.addChild(output_35, {
							"colIndex": 0,
							"rowIndex": 7
						});
						var output_36 = new cpr.controls.Output();
						output_36.value = "★";
						output_36.style.setClasses(["text-center"]);
						container.addChild(output_36, {
							"colIndex": 1,
							"rowIndex": 7
						});
						var output_37 = new cpr.controls.Output();
						output_37.value = "(논리적 레이블 값)";
						output_37.style.setClasses(["text-center"]);
						container.addChild(output_37, {
							"colIndex": 2,
							"rowIndex": 7
						});
						var output_38 = new cpr.controls.Output();
						output_38.value = "폼인 경우 1:1로 대응하는 레이블(라벨)의 값을 입력하거나 컨트롤에서 입력되는 값의 논리적인 레이블(라벨)의 값을 입력";
						container.addChild(output_38, {
							"colIndex": 3,
							"rowIndex": 7
						});
						var output_39 = new cpr.controls.Output();
						output_39.value = "noDataMessage";
						output_39.unselectable = false;
						output_39.style.setClasses(["pb-label"]);
						container.addChild(output_39, {
							"colIndex": 0,
							"rowIndex": 8
						});
						var output_40 = new cpr.controls.Output();
						output_40.value = "●";
						output_40.style.setClasses(["text-center"]);
						container.addChild(output_40, {
							"colIndex": 1,
							"rowIndex": 8
						});
						var output_41 = new cpr.controls.Output();
						output_41.value = "\"해당 내역이 없습니다.\"";
						output_41.style.setClasses(["text-center"]);
						container.addChild(output_41, {
							"colIndex": 2,
							"rowIndex": 8
						});
						var output_42 = new cpr.controls.Output();
						output_42.value = "그리드에 데이터가 없는 경우 표시될 메세지";
						container.addChild(output_42, {
							"colIndex": 3,
							"rowIndex": 8
						});
						var output_43 = new cpr.controls.Output();
						output_43.value = "readOnly";
						output_43.unselectable = false;
						output_43.style.setClasses(["pb-label"]);
						container.addChild(output_43, {
							"colIndex": 0,
							"rowIndex": 9
						});
						var output_44 = new cpr.controls.Output();
						output_44.value = "△";
						output_44.style.setClasses(["text-center"]);
						container.addChild(output_44, {
							"colIndex": 1,
							"rowIndex": 9
						});
						var output_45 = new cpr.controls.Output();
						output_45.value = "true | false";
						output_45.style.setClasses(["text-center"]);
						container.addChild(output_45, {
							"colIndex": 2,
							"rowIndex": 9
						});
						var output_46 = new cpr.controls.Output();
						output_46.value = "값을 편집하지 않는 조회성 그리드의 경우 해당 값을 \"true\"로 설정";
						container.addChild(output_46, {
							"colIndex": 3,
							"rowIndex": 9
						});
						var output_47 = new cpr.controls.Output();
						output_47.value = "resizableColumns";
						output_47.unselectable = false;
						output_47.style.setClasses(["pb-label"]);
						container.addChild(output_47, {
							"colIndex": 0,
							"rowIndex": 10
						});
						var output_48 = new cpr.controls.Output();
						output_48.value = "●";
						output_48.style.setClasses(["text-center"]);
						container.addChild(output_48, {
							"colIndex": 1,
							"rowIndex": 10
						});
						var output_49 = new cpr.controls.Output();
						output_49.value = "(적용할 컬럼의 인덱스)";
						output_49.style.setClasses(["text-center"]);
						container.addChild(output_49, {
							"colIndex": 2,
							"rowIndex": 10
						});
						var output_50 = new cpr.controls.Output();
						output_50.value = "특수컬럼 및 상태를 표시하는 컬럼, 고정된 텍스트 길이나 너비를 제공하는 컬럼을 제외한 나머지 컬럼은 허용";
						container.addChild(output_50, {
							"colIndex": 3,
							"rowIndex": 10
						});
						var output_51 = new cpr.controls.Output();
						output_51.value = "showDeleteRow";
						output_51.unselectable = false;
						output_51.style.setClasses(["pb-label"]);
						container.addChild(output_51, {
							"colIndex": 0,
							"rowIndex": 11
						});
						var output_52 = new cpr.controls.Output();
						output_52.value = "●";
						output_52.style.setClasses(["text-center"]);
						container.addChild(output_52, {
							"colIndex": 1,
							"rowIndex": 11
						});
						var output_53 = new cpr.controls.Output();
						output_53.value = "true";
						output_53.style.setClasses(["text-center"]);
						container.addChild(output_53, {
							"colIndex": 2,
							"rowIndex": 11
						});
						var output_54 = new cpr.controls.Output();
						output_54.value = "삭제된 행을 그리드에 표시";
						container.addChild(output_54, {
							"colIndex": 3,
							"rowIndex": 11
						});
						var output_55 = new cpr.controls.Output();
						output_55.value = "tabMode";
						output_55.unselectable = false;
						output_55.style.setClasses(["pb-label"]);
						container.addChild(output_55, {
							"colIndex": 0,
							"rowIndex": 12
						});
						var output_56 = new cpr.controls.Output();
						output_56.value = "●";
						output_56.style.setClasses(["text-center"]);
						container.addChild(output_56, {
							"colIndex": 1,
							"rowIndex": 12
						});
						var output_57 = new cpr.controls.Output();
						output_57.value = "\"all\" | \"editable\" | \"none\"";
						output_57.style.setClasses(["text-center"]);
						container.addChild(output_57, {
							"colIndex": 2,
							"rowIndex": 12
						});
						var output_58 = new cpr.controls.Output();
						output_58.value = "탭 이동 방식에 대한 설정으로, 웹 접근성 심사 시 해당 속성의 값을 심사 규정에 맞게 적용해야 함.";
						container.addChild(output_58, {
							"colIndex": 3,
							"rowIndex": 12
						});
						var output_59 = new cpr.controls.Output();
						output_59.value = "tooltip";
						output_59.unselectable = false;
						output_59.style.setClasses(["pb-label"]);
						container.addChild(output_59, {
							"colIndex": 0,
							"rowIndex": 13
						});
						var output_60 = new cpr.controls.Output();
						output_60.value = "△";
						output_60.style.setClasses(["text-center"]);
						container.addChild(output_60, {
							"colIndex": 1,
							"rowIndex": 13
						});
						var output_61 = new cpr.controls.Output();
						output_61.value = "(컨트롤의 힌트)";
						output_61.style.setClasses(["text-center"]);
						container.addChild(output_61, {
							"colIndex": 2,
							"rowIndex": 13
						});
						var output_62 = new cpr.controls.Output();
						output_62.value = "마우스 오버 시 인풋박스에 대한 힌트 제공 필요할 때 사용. 해당 속성을 작성하면 title 속성으로 적용됨";
						container.addChild(output_62, {
							"colIndex": 3,
							"rowIndex": 13
						});
						var output_63 = new cpr.controls.Output();
						output_63.value = "viewingMode";
						output_63.unselectable = false;
						output_63.style.setClasses(["pb-label"]);
						container.addChild(output_63, {
							"colIndex": 0,
							"rowIndex": 14
						});
						var output_64 = new cpr.controls.Output();
						output_64.value = "●";
						output_64.style.setClasses(["text-center"]);
						container.addChild(output_64, {
							"colIndex": 1,
							"rowIndex": 14
						});
						var output_65 = new cpr.controls.Output();
						output_65.value = "\"button\"";
						output_65.style.setClasses(["text-center"]);
						container.addChild(output_65, {
							"colIndex": 2,
							"rowIndex": 14
						});
						var output_66 = new cpr.controls.Output();
						output_66.value = "버튼을 포함하는 컨트롤에 대하여 뷰잉 모드에서도 버튼이 표시되도록 함. 대용량 그리드에서는 성능 저하의 요인이 될 수 있으므로 성능을 요구하는 화면의 경우 \"lite\"값으로 변경하여 사용";
						container.addChild(output_66, {
							"colIndex": 3,
							"rowIndex": 14
						});
					})(group_6);
					container.addChild(group_6, {
						"autoSize": "height",
						"width": "400px",
						"height": "514px"
					});
				})(group_5);
				container.addChild(group_5, {
					"autoSize": "height",
					"width": "1544px",
					"height": "614px"
				});
			})(group_2);
			container.addChild(group_2, {
				"autoSize": "height",
				"width": "1644px",
				"height": "1035px"
			});
			
			var group_7 = new cpr.controls.Container();
			group_7.style.setClasses(["pb-content"]);
			var verticalLayout_7 = new cpr.controls.layouts.VerticalLayout();
			verticalLayout_7.scrollable = false;
			verticalLayout_7.spacing = 40;
			verticalLayout_7.leftMargin = 50;
			verticalLayout_7.rightMargin = 50;
			verticalLayout_7.topMargin = 50;
			verticalLayout_7.bottomMargin = 50;
			group_7.setLayout(verticalLayout_7);
			(function(container){
				var group_8 = new cpr.controls.Container();
				var verticalLayout_8 = new cpr.controls.layouts.VerticalLayout();
				verticalLayout_8.scrollable = false;
				verticalLayout_8.spacing = 14;
				group_8.setLayout(verticalLayout_8);
				(function(container){
					var userDefinedControl_4 = new udc.hk.pb.SectionTitle();
					userDefinedControl_4.title = "그리드 영역 높이";
					userDefinedControl_4.subTextStyle = "text-blue";
					userDefinedControl_4.subText = "헤더 셀 또는 디테일 셀에 따라 적용 가능한 특수컬럼이 다를 수 있다.";
					container.addChild(userDefinedControl_4, {
						"autoSize": "none",
						"width": "1544px",
						"height": "29px"
					});
					var group_9 = new cpr.controls.Container();
					group_9.style.setClasses(["pb-table"]);
					var formLayout_2 = new cpr.controls.layouts.FormLayout();
					formLayout_2.scrollable = false;
					formLayout_2.topMargin = "4px";
					formLayout_2.rightMargin = "4px";
					formLayout_2.bottomMargin = "4px";
					formLayout_2.leftMargin = "4px";
					formLayout_2.horizontalSpacing = "8px";
					formLayout_2.verticalSpacing = "8px";
					formLayout_2.horizontalSeparatorWidth = 1;
					formLayout_2.verticalSeparatorWidth = 1;
					formLayout_2.setColumns(["150px", "80px", "1fr"]);
					formLayout_2.setUseColumnShade(0, true);
					formLayout_2.setRows(["28px", "26px", "26px", "26px", "26px", "26px"]);
					formLayout_2.setUseRowShade(0, true);
					group_9.setLayout(formLayout_2);
					(function(container){
						var output_67 = new cpr.controls.Output();
						output_67.value = "영역";
						output_67.style.setClasses(["pb-label"]);
						container.addChild(output_67, {
							"colIndex": 0,
							"rowIndex": 0
						});
						var output_68 = new cpr.controls.Output();
						output_68.value = "높이";
						output_68.style.setClasses(["pb-label"]);
						container.addChild(output_68, {
							"colIndex": 1,
							"rowIndex": 0
						});
						var output_69 = new cpr.controls.Output();
						output_69.value = "내용";
						output_69.style.setClasses(["pb-label"]);
						container.addChild(output_69, {
							"colIndex": 2,
							"rowIndex": 0
						});
						var output_70 = new cpr.controls.Output();
						output_70.value = "헤더";
						output_70.style.setClasses(["pb-label"]);
						container.addChild(output_70, {
							"colIndex": 0,
							"rowIndex": 1
						});
						var output_71 = new cpr.controls.Output();
						output_71.value = "31px";
						output_71.style.setClasses(["text-center"]);
						container.addChild(output_71, {
							"colIndex": 1,
							"rowIndex": 1
						});
						var output_72 = new cpr.controls.Output();
						container.addChild(output_72, {
							"colIndex": 2,
							"rowIndex": 1
						});
						var output_73 = new cpr.controls.Output();
						output_73.value = "디테일";
						output_73.style.setClasses(["pb-label"]);
						container.addChild(output_73, {
							"colIndex": 0,
							"rowIndex": 2
						});
						var output_74 = new cpr.controls.Output();
						output_74.value = "31px";
						output_74.style.setClasses(["text-center"]);
						container.addChild(output_74, {
							"colIndex": 1,
							"rowIndex": 2
						});
						var output_75 = new cpr.controls.Output();
						output_75.value = "";
						container.addChild(output_75, {
							"colIndex": 2,
							"rowIndex": 2
						});
						var output_76 = new cpr.controls.Output();
						output_76.value = "푸터";
						output_76.style.setClasses(["pb-label"]);
						container.addChild(output_76, {
							"colIndex": 0,
							"rowIndex": 3
						});
						var output_77 = new cpr.controls.Output();
						output_77.value = "31px";
						output_77.style.setClasses(["text-center"]);
						container.addChild(output_77, {
							"colIndex": 1,
							"rowIndex": 3
						});
						var output_78 = new cpr.controls.Output();
						container.addChild(output_78, {
							"colIndex": 2,
							"rowIndex": 3
						});
						var output_79 = new cpr.controls.Output();
						output_79.value = "그룹 헤더";
						output_79.style.setClasses(["pb-label"]);
						container.addChild(output_79, {
							"colIndex": 0,
							"rowIndex": 4
						});
						var output_80 = new cpr.controls.Output();
						output_80.value = "31px";
						output_80.style.setClasses(["text-center"]);
						container.addChild(output_80, {
							"colIndex": 1,
							"rowIndex": 4
						});
						var output_81 = new cpr.controls.Output();
						container.addChild(output_81, {
							"colIndex": 2,
							"rowIndex": 4
						});
						var output_82 = new cpr.controls.Output();
						output_82.value = "그룹 푸터";
						output_82.style.setClasses(["pb-label"]);
						container.addChild(output_82, {
							"colIndex": 0,
							"rowIndex": 5
						});
						var output_83 = new cpr.controls.Output();
						output_83.value = "31px";
						output_83.style.setClasses(["text-center"]);
						container.addChild(output_83, {
							"colIndex": 1,
							"rowIndex": 5
						});
						var output_84 = new cpr.controls.Output();
						container.addChild(output_84, {
							"colIndex": 2,
							"rowIndex": 5
						});
					})(group_9);
					container.addChild(group_9, {
						"autoSize": "height",
						"width": "400px",
						"height": "208px"
					});
				})(group_8);
				container.addChild(group_8, {
					"autoSize": "height",
					"width": "1544px",
					"height": "300px"
				});
			})(group_7);
			container.addChild(group_7, {
				"autoSize": "height",
				"width": "1644px",
				"height": "366px"
			});
			
			var group_10 = new cpr.controls.Container();
			group_10.style.setClasses(["pb-content"]);
			var verticalLayout_9 = new cpr.controls.layouts.VerticalLayout();
			verticalLayout_9.scrollable = false;
			verticalLayout_9.spacing = 40;
			verticalLayout_9.leftMargin = 50;
			verticalLayout_9.rightMargin = 50;
			verticalLayout_9.topMargin = 50;
			verticalLayout_9.bottomMargin = 50;
			group_10.setLayout(verticalLayout_9);
			(function(container){
				var group_11 = new cpr.controls.Container();
				var verticalLayout_10 = new cpr.controls.layouts.VerticalLayout();
				verticalLayout_10.scrollable = false;
				verticalLayout_10.spacing = 14;
				group_11.setLayout(verticalLayout_10);
				(function(container){
					var userDefinedControl_5 = new udc.hk.pb.SectionTitle();
					userDefinedControl_5.title = "그리드 특수컬럼";
					userDefinedControl_5.subTextStyle = "text-blue";
					userDefinedControl_5.subText = "헤더 셀 또는 디테일 셀에 따라 적용 가능한 특수컬럼이 다를 수 있다.";
					container.addChild(userDefinedControl_5, {
						"autoSize": "none",
						"width": "1544px",
						"height": "29px"
					});
					var group_12 = new cpr.controls.Container();
					group_12.style.setClasses(["pb-table"]);
					var formLayout_3 = new cpr.controls.layouts.FormLayout();
					formLayout_3.scrollable = false;
					formLayout_3.topMargin = "4px";
					formLayout_3.rightMargin = "4px";
					formLayout_3.bottomMargin = "4px";
					formLayout_3.leftMargin = "4px";
					formLayout_3.horizontalSpacing = "8px";
					formLayout_3.verticalSpacing = "8px";
					formLayout_3.horizontalSeparatorWidth = 1;
					formLayout_3.verticalSeparatorWidth = 1;
					formLayout_3.setColumns(["150px", "80px", "80px", "80px", "1fr"]);
					formLayout_3.setUseColumnShade(0, true);
					formLayout_3.setRows(["28px", "26px", "26px", "26px"]);
					formLayout_3.setUseRowShade(0, true);
					group_12.setLayout(formLayout_3);
					(function(container){
						var output_85 = new cpr.controls.Output();
						output_85.value = "특수컬럼";
						output_85.style.setClasses(["pb-label"]);
						container.addChild(output_85, {
							"colIndex": 0,
							"rowIndex": 0
						});
						var output_86 = new cpr.controls.Output();
						output_86.value = "너비";
						output_86.style.setClasses(["pb-label"]);
						container.addChild(output_86, {
							"colIndex": 1,
							"rowIndex": 0
						});
						var output_87 = new cpr.controls.Output();
						output_87.value = "autoFit";
						output_87.style.setClasses(["pb-label"]);
						container.addChild(output_87, {
							"colIndex": 2,
							"rowIndex": 0
						});
						var output_88 = new cpr.controls.Output();
						output_88.value = "resizable";
						output_88.style.setClasses(["pb-label"]);
						container.addChild(output_88, {
							"colIndex": 3,
							"rowIndex": 0
						});
						var output_89 = new cpr.controls.Output();
						output_89.value = "내용";
						output_89.style.setClasses(["pb-label"]);
						container.addChild(output_89, {
							"colIndex": 4,
							"rowIndex": 0
						});
						var output_90 = new cpr.controls.Output();
						output_90.value = "checkbox";
						output_90.style.setClasses(["pb-label"]);
						container.addChild(output_90, {
							"colIndex": 0,
							"rowIndex": 1
						});
						var output_91 = new cpr.controls.Output();
						output_91.value = "32px";
						output_91.style.setClasses(["text-center"]);
						container.addChild(output_91, {
							"colIndex": 1,
							"rowIndex": 1
						});
						var output_92 = new cpr.controls.Output();
						output_92.value = "false";
						output_92.style.setClasses(["text-center"]);
						container.addChild(output_92, {
							"colIndex": 2,
							"rowIndex": 1
						});
						var output_93 = new cpr.controls.Output();
						output_93.value = "false";
						output_93.style.setClasses(["text-center"]);
						container.addChild(output_93, {
							"colIndex": 3,
							"rowIndex": 1
						});
						var output_94 = new cpr.controls.Output();
						container.addChild(output_94, {
							"colIndex": 4,
							"rowIndex": 1
						});
						var output_95 = new cpr.controls.Output();
						output_95.value = "radio";
						output_95.style.setClasses(["pb-label"]);
						container.addChild(output_95, {
							"colIndex": 0,
							"rowIndex": 2
						});
						var output_96 = new cpr.controls.Output();
						output_96.value = "32px";
						output_96.style.setClasses(["text-center"]);
						container.addChild(output_96, {
							"colIndex": 1,
							"rowIndex": 2
						});
						var output_97 = new cpr.controls.Output();
						output_97.value = "false";
						output_97.style.setClasses(["text-center"]);
						container.addChild(output_97, {
							"colIndex": 2,
							"rowIndex": 2
						});
						var output_98 = new cpr.controls.Output();
						output_98.value = "false";
						output_98.style.setClasses(["text-center"]);
						container.addChild(output_98, {
							"colIndex": 3,
							"rowIndex": 2
						});
						var output_99 = new cpr.controls.Output();
						container.addChild(output_99, {
							"colIndex": 4,
							"rowIndex": 2
						});
						var output_100 = new cpr.controls.Output();
						output_100.value = "rowindex";
						output_100.style.setClasses(["pb-label"]);
						container.addChild(output_100, {
							"colIndex": 0,
							"rowIndex": 3
						});
						var output_101 = new cpr.controls.Output();
						output_101.value = "48px";
						output_101.style.setClasses(["text-center"]);
						container.addChild(output_101, {
							"colIndex": 1,
							"rowIndex": 3
						});
						var output_102 = new cpr.controls.Output();
						output_102.value = "false";
						output_102.style.setClasses(["text-center"]);
						container.addChild(output_102, {
							"colIndex": 2,
							"rowIndex": 3
						});
						var output_103 = new cpr.controls.Output();
						output_103.value = "true";
						output_103.style.setClasses(["text-center"]);
						container.addChild(output_103, {
							"colIndex": 3,
							"rowIndex": 3
						});
						var output_104 = new cpr.controls.Output();
						output_104.value = "조회되는 행의 수가 많은 경우 유동적으로 너비의 값 변경 가능";
						container.addChild(output_104, {
							"colIndex": 4,
							"rowIndex": 3
						});
					})(group_12);
					container.addChild(group_12, {
						"autoSize": "height",
						"width": "400px",
						"height": "140px"
					});
				})(group_11);
				container.addChild(group_11, {
					"autoSize": "height",
					"width": "1544px",
					"height": "300px"
				});
			})(group_10);
			container.addChild(group_10, {
				"autoSize": "height",
				"width": "1644px",
				"height": "366px"
			});
			
			var group_13 = new cpr.controls.Container();
			group_13.style.setClasses(["pb-content"]);
			var verticalLayout_11 = new cpr.controls.layouts.VerticalLayout();
			verticalLayout_11.scrollable = false;
			verticalLayout_11.spacing = 40;
			verticalLayout_11.leftMargin = 50;
			verticalLayout_11.rightMargin = 50;
			verticalLayout_11.topMargin = 50;
			verticalLayout_11.bottomMargin = 50;
			group_13.setLayout(verticalLayout_11);
			(function(container){
				var group_14 = new cpr.controls.Container();
				var verticalLayout_12 = new cpr.controls.layouts.VerticalLayout();
				verticalLayout_12.scrollable = false;
				verticalLayout_12.spacing = 14;
				group_14.setLayout(verticalLayout_12);
				(function(container){
					var userDefinedControl_6 = new udc.hk.pb.SectionTitle();
					userDefinedControl_6.title = "클래스";
					container.addChild(userDefinedControl_6, {
						"autoSize": "none",
						"width": "1544px",
						"height": "29px"
					});
					var group_15 = new cpr.controls.Container();
					group_15.style.setClasses(["pb-table"]);
					var formLayout_4 = new cpr.controls.layouts.FormLayout();
					formLayout_4.scrollable = false;
					formLayout_4.topMargin = "4px";
					formLayout_4.rightMargin = "4px";
					formLayout_4.bottomMargin = "4px";
					formLayout_4.leftMargin = "4px";
					formLayout_4.horizontalSpacing = "8px";
					formLayout_4.verticalSpacing = "8px";
					formLayout_4.horizontalSeparatorWidth = 1;
					formLayout_4.verticalSeparatorWidth = 1;
					formLayout_4.setColumns(["150px", "1fr", "1fr"]);
					formLayout_4.setUseColumnShade(0, true);
					formLayout_4.setRows(["28px", "200px", "0px", "200px", "200px", "200px"]);
					formLayout_4.setUseRowShade(0, true);
					formLayout_4.setRowAutoSizing(2, true);
					group_15.setLayout(formLayout_4);
					(function(container){
						var output_105 = new cpr.controls.Output();
						output_105.value = "클래스명";
						output_105.style.setClasses(["pb-label"]);
						container.addChild(output_105, {
							"colIndex": 0,
							"rowIndex": 0
						});
						var output_106 = new cpr.controls.Output();
						output_106.value = "적용";
						output_106.style.setClasses(["pb-label"]);
						container.addChild(output_106, {
							"colIndex": 1,
							"rowIndex": 0
						});
						var output_107 = new cpr.controls.Output();
						output_107.value = "내용";
						output_107.style.setClasses(["pb-label"]);
						container.addChild(output_107, {
							"colIndex": 2,
							"rowIndex": 0
						});
						var output_108 = new cpr.controls.Output();
						output_108.value = "table-no-stripe";
						output_108.style.setClasses(["pb-label"]);
						container.addChild(output_108, {
							"colIndex": 0,
							"rowIndex": 1
						});
						var grid_2 = new cpr.controls.Grid("grd4");
						grid_2.readOnly = true;
						grid_2.init({
							"dataSet": app.lookup("dsSts"),
							"columnMovable": true,
							"resizableColumns": "all",
							"columns": [
								{"width": "100px"},
								{"width": "100px"},
								{"width": "100px"},
								{"width": "100px"},
								{"width": "100px"}
							],
							"header": {
								"rows": [{"height": "31px"}],
								"cells": [
									{
										"constraint": {"rowIndex": 0, "colIndex": 0},
										"configurator": function(cell){
											cell.filterable = false;
											cell.sortable = false;
											cell.targetColumnName = "column1";
											cell.text = "컬럼";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 1},
										"configurator": function(cell){
											cell.filterable = false;
											cell.sortable = false;
											cell.targetColumnName = "column2";
											cell.text = "컬럼";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 2},
										"configurator": function(cell){
											cell.filterable = false;
											cell.sortable = false;
											cell.targetColumnName = "column3";
											cell.text = "컬럼";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 3},
										"configurator": function(cell){
											cell.filterable = false;
											cell.sortable = false;
											cell.targetColumnName = "column4";
											cell.text = "컬럼";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 4},
										"configurator": function(cell){
											cell.filterable = false;
											cell.sortable = false;
											cell.targetColumnName = "column5";
											cell.text = "컬럼";
										}
									}
								]
							},
							"detail": {
								"rows": [{"height": "31px"}],
								"cells": [
									{
										"constraint": {"rowIndex": 0, "colIndex": 0},
										"configurator": function(cell){
											cell.columnName = "column1";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 1},
										"configurator": function(cell){
											cell.columnName = "column2";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 2},
										"configurator": function(cell){
											cell.columnName = "column3";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 3},
										"configurator": function(cell){
											cell.columnName = "column4";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 4},
										"configurator": function(cell){
											cell.columnName = "column5";
										}
									}
								]
							}
						});
						grid_2.style.setClasses(["list-normal", "table-no-stripe"]);
						container.addChild(grid_2, {
							"colIndex": 1,
							"rowIndex": 1
						});
						var output_109 = new cpr.controls.Output();
						output_109.value = "그리드에 적용하는 클래스. 홀수행에 대한 배경색을 적용하지 않는 경우 사용";
						container.addChild(output_109, {
							"colIndex": 2,
							"rowIndex": 1
						});
						var output_110 = new cpr.controls.Output();
						output_110.value = "table-at";
						output_110.style.setClasses(["pb-label"]);
						container.addChild(output_110, {
							"colIndex": 0,
							"rowIndex": 2
						});
						var grid_3 = new cpr.controls.Grid("grd5");
						grid_3.readOnly = true;
						grid_3.init({
							"dataSet": app.lookup("dsSts"),
							"columnMovable": true,
							"resizableColumns": "all",
							"columns": [
								{"width": "100px"},
								{"width": "100px"},
								{"width": "100px"},
								{"width": "100px"},
								{"width": "100px"}
							],
							"header": {
								"rows": [{"height": "31px"}],
								"cells": [
									{
										"constraint": {"rowIndex": 0, "colIndex": 0},
										"configurator": function(cell){
											cell.filterable = false;
											cell.sortable = false;
											cell.targetColumnName = "column1";
											cell.text = "컬럼";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 1},
										"configurator": function(cell){
											cell.filterable = false;
											cell.sortable = false;
											cell.targetColumnName = "column2";
											cell.text = "컬럼";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 2},
										"configurator": function(cell){
											cell.filterable = false;
											cell.sortable = false;
											cell.targetColumnName = "column3";
											cell.text = "컬럼";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 3},
										"configurator": function(cell){
											cell.filterable = false;
											cell.sortable = false;
											cell.targetColumnName = "column4";
											cell.text = "컬럼";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 4},
										"configurator": function(cell){
											cell.filterable = false;
											cell.sortable = false;
											cell.targetColumnName = "column5";
											cell.text = "컬럼";
										}
									}
								]
							},
							"detail": {
								"rows": [{"height": "31px"}],
								"cells": [
									{
										"constraint": {"rowIndex": 0, "colIndex": 0},
										"configurator": function(cell){
											cell.columnName = "column1";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 1},
										"configurator": function(cell){
											cell.columnName = "column2";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 2},
										"configurator": function(cell){
											cell.columnName = "column3";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 3},
										"configurator": function(cell){
											cell.columnName = "column4";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 4},
										"configurator": function(cell){
											cell.columnName = "column5";
										}
									}
								]
							}
						});
						grid_3.style.setClasses(["list-normal", "table-at"]);
						container.addChild(grid_3, {
							"colIndex": 1,
							"rowIndex": 2
						});
						var output_111 = new cpr.controls.Output();
						output_111.value = "그리드의 마지막 행의 선과 그리드의 선이 겹쳐 라인이 두껍게 표시되는 것을 방지하기 위한 클래스로 자동 높이를 사용하는 그리드 또는 행의 선이 두껍게 표시되는 것을 방지할 때 사용. 푸터가 있는 그리드에서는 사용을 하지 않도록 주의한다. 퍼블리싱 단에서 처리될 수 없으므로 공통으로 처리하는 것을 권장한다.";
						container.addChild(output_111, {
							"colIndex": 2,
							"rowIndex": 2
						});
						var output_112 = new cpr.controls.Output();
						output_112.value = "highlight";
						output_112.style.setClasses(["pb-label"]);
						container.addChild(output_112, {
							"colIndex": 0,
							"rowIndex": 3
						});
						var grid_4 = new cpr.controls.Grid("grd1");
						grid_4.init({
							"columns": [
								{"width": "100px"},
								{"width": "100px"},
								{"width": "100px"},
								{"width": "100px"},
								{"width": "100px"}
							],
							"header": {
								"rows": [{"height": "31px"}],
								"cells": [
									{
										"constraint": {"rowIndex": 0, "colIndex": 0},
										"configurator": function(cell){
											cell.text = "변경후";
											cell.style.setClasses(["highlight"]);
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 1},
										"configurator": function(cell){
											cell.text = "컬럼";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 2},
										"configurator": function(cell){
											cell.text = "강조";
											cell.style.setClasses(["highlight"]);
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 3},
										"configurator": function(cell){
											cell.text = "컬럼";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 4},
										"configurator": function(cell){
											cell.text = "컬럼";
										}
									}
								]
							},
							"detail": {
								"rows": [{"height": "31px"}],
								"cells": [
									{
										"constraint": {"rowIndex": 0, "colIndex": 0},
										"configurator": function(cell){
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 1},
										"configurator": function(cell){
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 2},
										"configurator": function(cell){
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 3},
										"configurator": function(cell){
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 4},
										"configurator": function(cell){
										}
									}
								]
							},
							"footer": {
								"rows": [{"height": "31px"}],
								"cells": [
									{
										"constraint": {"rowIndex": 0, "colIndex": 0},
										"configurator": function(cell){
											cell.expr = "\"변경 후\"";
											cell.style.setClasses(["highlight"]);
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 1},
										"configurator": function(cell){
											cell.expr = "\"\"";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 2},
										"configurator": function(cell){
											cell.expr = "\"강조\"";
											cell.style.setClasses(["highlight"]);
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 3},
										"configurator": function(cell){
											cell.expr = "\"\"";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 4},
										"configurator": function(cell){
											cell.expr = "\"\"";
										}
									}
								]
							}
						});
						grid_4.style.setClasses(["list-normal"]);
						container.addChild(grid_4, {
							"colIndex": 1,
							"rowIndex": 3
						});
						var output_113 = new cpr.controls.Output();
						output_113.value = "헤더 또는 푸터의 셀에 적용하는 클래스. 그리드 헤더나 푸터에서 \"변경 후\"에 대한 컬럼이나 셀 또는 강조가 필요한 컬럼이나 셀에 해당 클래스를 적용";
						container.addChild(output_113, {
							"colIndex": 2,
							"rowIndex": 3
						});
						var output_114 = new cpr.controls.Output();
						output_114.value = "sub-footer";
						output_114.style.setClasses(["pb-label"]);
						container.addChild(output_114, {
							"colIndex": 0,
							"rowIndex": 4
						});
						var grid_5 = new cpr.controls.Grid("grd2");
						grid_5.init({
							"columns": [
								{"width": "100px"},
								{"width": "100px"},
								{"width": "100px"},
								{"width": "100px"},
								{"width": "100px"}
							],
							"header": {
								"rows": [{"height": "31px"}],
								"cells": [
									{
										"constraint": {"rowIndex": 0, "colIndex": 0},
										"configurator": function(cell){
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 1},
										"configurator": function(cell){
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 2},
										"configurator": function(cell){
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 3},
										"configurator": function(cell){
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 4},
										"configurator": function(cell){
										}
									}
								]
							},
							"detail": {
								"rows": [{"height": "31px"}],
								"cells": [
									{
										"constraint": {"rowIndex": 0, "colIndex": 0},
										"configurator": function(cell){
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 1},
										"configurator": function(cell){
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 2},
										"configurator": function(cell){
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 3},
										"configurator": function(cell){
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 4},
										"configurator": function(cell){
										}
									}
								]
							},
							"footer": {
								"rows": [
									{"height": "31px"},
									{"height": "31px"}
								],
								"cells": [
									{
										"constraint": {"rowIndex": 0, "colIndex": 0},
										"configurator": function(cell){
											cell.expr = "\"부분합계\"";
											cell.style.setClasses(["sub-footer"]);
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 1},
										"configurator": function(cell){
											cell.expr = "\"\"";
											cell.style.setClasses(["sub-footer"]);
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 2},
										"configurator": function(cell){
											cell.expr = "\"\"";
											cell.style.setClasses(["sub-footer"]);
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 3},
										"configurator": function(cell){
											cell.expr = "\"\"";
											cell.style.setClasses(["sub-footer"]);
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 4},
										"configurator": function(cell){
											cell.expr = "\"\"";
											cell.style.setClasses(["sub-footer"]);
										}
									},
									{
										"constraint": {"rowIndex": 1, "colIndex": 0},
										"configurator": function(cell){
											cell.expr = "\"합계\"";
										}
									},
									{
										"constraint": {"rowIndex": 1, "colIndex": 1},
										"configurator": function(cell){
											cell.expr = "\"\"";
										}
									},
									{
										"constraint": {"rowIndex": 1, "colIndex": 2},
										"configurator": function(cell){
											cell.expr = "\"\"";
										}
									},
									{
										"constraint": {"rowIndex": 1, "colIndex": 3},
										"configurator": function(cell){
											cell.expr = "\"\"";
										}
									},
									{
										"constraint": {"rowIndex": 1, "colIndex": 4},
										"configurator": function(cell){
											cell.expr = "\"\"";
										}
									}
								]
							}
						});
						grid_5.style.setClasses(["list-normal"]);
						container.addChild(grid_5, {
							"colIndex": 1,
							"rowIndex": 4
						});
						var output_115 = new cpr.controls.Output();
						output_115.value = "푸터 셀에 적용하는 클래스. 부분합계를 표시하는 푸터인 경우 푸터의 각 셀에 해당 클래스를 적용 (일반 푸터는 연한 분홍색을 사용)";
						container.addChild(output_115, {
							"colIndex": 2,
							"rowIndex": 4
						});
						var output_116 = new cpr.controls.Output();
						output_116.value = "highlight-cell-01\nhighlight-cell-02\nhighlight-cell-03\nhighlight-cell-04";
						output_116.style.setClasses(["pb-label"]);
						container.addChild(output_116, {
							"colIndex": 0,
							"rowIndex": 5
						});
						var grid_6 = new cpr.controls.Grid("grd3");
						grid_6.readOnly = true;
						grid_6.init({
							"dataSet": app.lookup("dsSts"),
							"columnMovable": true,
							"resizableColumns": "all",
							"columns": [
								{"width": "120px"},
								{"width": "120px"},
								{"width": "120px"},
								{"width": "120px"},
								{"width": "120px"}
							],
							"header": {
								"rows": [{"height": "31px"}],
								"cells": [
									{
										"constraint": {"rowIndex": 0, "colIndex": 0},
										"configurator": function(cell){
											cell.filterable = false;
											cell.sortable = false;
											cell.targetColumnName = "column1";
											cell.text = "일반";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 1},
										"configurator": function(cell){
											cell.filterable = false;
											cell.sortable = false;
											cell.targetColumnName = "column2";
											cell.text = "highlight-cell-01";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 2},
										"configurator": function(cell){
											cell.filterable = false;
											cell.sortable = false;
											cell.targetColumnName = "column3";
											cell.text = "highlight-cell-02";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 3},
										"configurator": function(cell){
											cell.filterable = false;
											cell.sortable = false;
											cell.targetColumnName = "column4";
											cell.text = "highlight-cell-03";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 4},
										"configurator": function(cell){
											cell.filterable = false;
											cell.sortable = false;
											cell.targetColumnName = "column5";
											cell.text = "highlight-cell-04";
										}
									}
								]
							},
							"detail": {
								"rows": [{"height": "31px"}],
								"cells": [
									{
										"constraint": {"rowIndex": 0, "colIndex": 0},
										"configurator": function(cell){
											cell.columnName = "column1";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 1},
										"configurator": function(cell){
											cell.columnName = "column2";
											cell.style.setClasses(["highlight-cell-01"]);
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 2},
										"configurator": function(cell){
											cell.columnName = "column3";
											cell.style.setClasses(["highlight-cell-02"]);
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 3},
										"configurator": function(cell){
											cell.columnName = "column4";
											cell.style.setClasses(["highlight-cell-03"]);
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 4},
										"configurator": function(cell){
											cell.columnName = "column5";
											cell.style.setClasses(["highlight-cell-04"]);
										}
									}
								]
							}
						});
						grid_6.style.setClasses(["list-normal"]);
						container.addChild(grid_6, {
							"colIndex": 1,
							"rowIndex": 5
						});
						var output_117 = new cpr.controls.Output();
						output_117.value = "디테일 셀에 적용하는 클래스. 디테일 셀의 강조는 해당 클래스 사용";
						container.addChild(output_117, {
							"colIndex": 2,
							"rowIndex": 5
						});
					})(group_15);
					container.addChild(group_15, {
						"autoSize": "height",
						"width": "400px",
						"height": "1078px"
					});
				})(group_14);
				container.addChild(group_14, {
					"autoSize": "height",
					"width": "1544px",
					"height": "1201px"
				});
			})(group_13);
			container.addChild(group_13, {
				"autoSize": "height",
				"width": "1644px",
				"height": "1289px"
			});
			
			var group_16 = new cpr.controls.Container();
			group_16.style.setClasses(["pb-content"]);
			var verticalLayout_13 = new cpr.controls.layouts.VerticalLayout();
			verticalLayout_13.scrollable = false;
			verticalLayout_13.spacing = 40;
			verticalLayout_13.leftMargin = 50;
			verticalLayout_13.rightMargin = 50;
			verticalLayout_13.topMargin = 50;
			verticalLayout_13.bottomMargin = 50;
			group_16.setLayout(verticalLayout_13);
			(function(container){
				var group_17 = new cpr.controls.Container();
				var verticalLayout_14 = new cpr.controls.layouts.VerticalLayout();
				verticalLayout_14.scrollable = false;
				verticalLayout_14.spacing = 14;
				group_17.setLayout(verticalLayout_14);
				(function(container){
					var userDefinedControl_7 = new udc.hk.pb.SectionTitle();
					userDefinedControl_7.title = "트리셀";
					container.addChild(userDefinedControl_7, {
						"width": "1544px",
						"height": "29px"
					});
					var group_18 = new cpr.controls.Container();
					var verticalLayout_15 = new cpr.controls.layouts.VerticalLayout();
					group_18.setLayout(verticalLayout_15);
					(function(container){
						var grid_7 = new cpr.controls.Grid("grdTreecell");
						grid_7.init({
							"dataSet": app.lookup("dsList"),
							"columnMovable": true,
							"autoFit": "0",
							"resizableColumns": "0",
							"collapsible": true,
							"viewingMode": "button",
							"columns": [{"width": "200px"}],
							"header": {
								"rows": [{"height": "31px"}],
								"cells": [{
									"constraint": {"rowIndex": 0, "colIndex": 0},
									"configurator": function(cell){
										cell.filterable = false;
										cell.sortable = false;
										cell.targetColumnName = "treecell";
										cell.text = "트리셀";
									}
								}]
							},
							"detail": {
								"rows": [{"height": "31px"}],
								"cells": [{
									"constraint": {"rowIndex": 0, "colIndex": 0},
									"configurator": function(cell){
										cell.columnName = "treecell";
										cell.control = (function(){
											var treeCell_2 = new cpr.controls.gridpart.renderer.TreeCell();
											treeCell_2.bind("level").toDataColumn("level");
											treeCell_2.bind("value").toDataColumn("treecell");
											return treeCell_2;
										})();
										cell.controlConstraint = {};
									}
								}]
							}
						});
						grid_7.style.setClasses(["list-normal"]);
						container.addChild(grid_7, {
							"width": "400px",
							"height": "250px"
						});
					})(group_18);
					container.addChild(group_18, {
						"autoSize": "height",
						"width": "400px",
						"height": "250px"
					});
				})(group_17);
				container.addChild(group_17, {
					"autoSize": "height",
					"width": "1544px",
					"height": "293px"
				});
				var group_19 = new cpr.controls.Container();
				var verticalLayout_16 = new cpr.controls.layouts.VerticalLayout();
				verticalLayout_16.scrollable = false;
				verticalLayout_16.spacing = 14;
				group_19.setLayout(verticalLayout_16);
				(function(container){
					var userDefinedControl_8 = new udc.hk.pb.SectionTitle();
					userDefinedControl_8.title = "기본속성";
					userDefinedControl_8.subText = "● = 사용 / ○ = 미사용 / △ = 상황에 따라 사용 / ★ = 필수로 작성";
					userDefinedControl_8.subTextStyle = "text-red";
					container.addChild(userDefinedControl_8, {
						"autoSize": "none",
						"width": "1544px",
						"height": "29px"
					});
					var group_20 = new cpr.controls.Container();
					group_20.style.setClasses(["pb-table"]);
					var formLayout_5 = new cpr.controls.layouts.FormLayout();
					formLayout_5.scrollable = false;
					formLayout_5.topMargin = "4px";
					formLayout_5.rightMargin = "4px";
					formLayout_5.bottomMargin = "4px";
					formLayout_5.leftMargin = "4px";
					formLayout_5.horizontalSpacing = "8px";
					formLayout_5.verticalSpacing = "8px";
					formLayout_5.horizontalSeparatorWidth = 1;
					formLayout_5.verticalSeparatorWidth = 1;
					formLayout_5.setColumns(["150px", "60px", "220px", "1fr"]);
					formLayout_5.setUseColumnShade(0, true);
					formLayout_5.setRows(["28px", "26px", "26px", "26px", "26px", "26px", "26px", "26px", "26px", "26px"]);
					formLayout_5.setUseRowShade(0, true);
					formLayout_5.setRowAutoSizing(1, true);
					formLayout_5.setRowAutoSizing(2, true);
					formLayout_5.setRowAutoSizing(3, true);
					formLayout_5.setRowAutoSizing(4, true);
					formLayout_5.setRowAutoSizing(5, true);
					formLayout_5.setRowAutoSizing(6, true);
					formLayout_5.setRowAutoSizing(7, true);
					formLayout_5.setRowAutoSizing(8, true);
					formLayout_5.setRowAutoSizing(9, true);
					group_20.setLayout(formLayout_5);
					(function(container){
						var output_118 = new cpr.controls.Output();
						output_118.value = "속성명";
						output_118.style.setClasses(["pb-label"]);
						container.addChild(output_118, {
							"colIndex": 0,
							"rowIndex": 0
						});
						var output_119 = new cpr.controls.Output();
						output_119.value = "사용여부";
						output_119.style.setClasses(["pb-label"]);
						container.addChild(output_119, {
							"colIndex": 1,
							"rowIndex": 0
						});
						var output_120 = new cpr.controls.Output();
						output_120.value = "적용값";
						output_120.style.setClasses(["pb-label"]);
						container.addChild(output_120, {
							"colIndex": 2,
							"rowIndex": 0
						});
						var output_121 = new cpr.controls.Output();
						output_121.value = "내용";
						output_121.style.setClasses(["pb-label"]);
						container.addChild(output_121, {
							"colIndex": 3,
							"rowIndex": 0
						});
						var output_122 = new cpr.controls.Output();
						output_122.value = "fieldLabel";
						output_122.unselectable = false;
						output_122.style.setClasses(["pb-label"]);
						container.addChild(output_122, {
							"colIndex": 0,
							"rowIndex": 1
						});
						var output_123 = new cpr.controls.Output();
						output_123.value = "★";
						output_123.style.setClasses(["text-center"]);
						container.addChild(output_123, {
							"colIndex": 1,
							"rowIndex": 1
						});
						var output_124 = new cpr.controls.Output();
						output_124.value = "(논리적 레이블 값)";
						output_124.style.setClasses(["text-center"]);
						container.addChild(output_124, {
							"colIndex": 2,
							"rowIndex": 1
						});
						var output_125 = new cpr.controls.Output();
						output_125.value = "폼인 경우 1:1로 대응하는 레이블(라벨)의 값을 입력하거나 컨트롤에서 입력되는 값의 논리적인 레이블(라벨)의 값을 입력";
						container.addChild(output_125, {
							"colIndex": 3,
							"rowIndex": 1
						});
						var output_126 = new cpr.controls.Output();
						output_126.value = "indent";
						output_126.unselectable = false;
						output_126.style.setClasses(["pb-label"]);
						container.addChild(output_126, {
							"colIndex": 0,
							"rowIndex": 2
						});
						var output_127 = new cpr.controls.Output();
						output_127.value = "●";
						output_127.style.setClasses(["text-center"]);
						container.addChild(output_127, {
							"colIndex": 1,
							"rowIndex": 2
						});
						var output_128 = new cpr.controls.Output();
						output_128.value = "18";
						output_128.style.setClasses(["text-center"]);
						if(typeof onOutputClick == "function") {
							output_128.addEventListener("click", onOutputClick);
						}
						container.addChild(output_128, {
							"colIndex": 2,
							"rowIndex": 2
						});
						var output_129 = new cpr.controls.Output();
						output_129.value = "노드의 깊이";
						container.addChild(output_129, {
							"colIndex": 3,
							"rowIndex": 2
						});
						var output_130 = new cpr.controls.Output();
						output_130.value = "level";
						output_130.unselectable = false;
						output_130.style.setClasses(["pb-label"]);
						container.addChild(output_130, {
							"colIndex": 0,
							"rowIndex": 3
						});
						var output_131 = new cpr.controls.Output();
						output_131.value = "★";
						output_131.style.setClasses(["text-center"]);
						container.addChild(output_131, {
							"colIndex": 1,
							"rowIndex": 3
						});
						var output_132 = new cpr.controls.Output();
						output_132.value = "(상대 컬럼 바인딩)";
						output_132.style.setClasses(["text-center"]);
						container.addChild(output_132, {
							"colIndex": 2,
							"rowIndex": 3
						});
						var output_133 = new cpr.controls.Output();
						output_133.value = "트리셀의 노드를 표현하기 위하여 반드시 해당 속성에 상대 컬럼 바인딩으로 레벨 값을 연결해야 함";
						container.addChild(output_133, {
							"colIndex": 3,
							"rowIndex": 3
						});
						var output_134 = new cpr.controls.Output();
						output_134.value = "showCheckbox";
						output_134.unselectable = false;
						output_134.style.setClasses(["pb-label"]);
						container.addChild(output_134, {
							"colIndex": 0,
							"rowIndex": 4
						});
						var output_135 = new cpr.controls.Output();
						output_135.value = "△";
						output_135.style.setClasses(["text-center"]);
						container.addChild(output_135, {
							"colIndex": 1,
							"rowIndex": 4
						});
						var output_136 = new cpr.controls.Output();
						output_136.value = "true | false";
						output_136.style.setClasses(["text-center"]);
						container.addChild(output_136, {
							"colIndex": 2,
							"rowIndex": 4
						});
						var output_137 = new cpr.controls.Output();
						output_137.value = "트리셀에 체크박스를 표시하는 경우 해당 속성을 사용";
						container.addChild(output_137, {
							"colIndex": 3,
							"rowIndex": 4
						});
						var output_138 = new cpr.controls.Output();
						output_138.value = "showLines";
						output_138.unselectable = false;
						output_138.style.setClasses(["pb-label"]);
						container.addChild(output_138, {
							"colIndex": 0,
							"rowIndex": 5
						});
						var output_139 = new cpr.controls.Output();
						output_139.value = "○";
						output_139.style.setClasses(["text-center"]);
						container.addChild(output_139, {
							"colIndex": 1,
							"rowIndex": 5
						});
						var output_140 = new cpr.controls.Output();
						output_140.value = "false";
						output_140.style.setClasses(["text-center"]);
						container.addChild(output_140, {
							"colIndex": 2,
							"rowIndex": 5
						});
						var output_141 = new cpr.controls.Output();
						output_141.value = "트리 셀에 연결선을 표시";
						container.addChild(output_141, {
							"colIndex": 3,
							"rowIndex": 5
						});
						var output_142 = new cpr.controls.Output();
						output_142.value = "showRootLines";
						output_142.unselectable = false;
						output_142.style.setClasses(["pb-label"]);
						container.addChild(output_142, {
							"colIndex": 0,
							"rowIndex": 6
						});
						var output_143 = new cpr.controls.Output();
						output_143.value = "●";
						output_143.style.setClasses(["text-center"]);
						container.addChild(output_143, {
							"colIndex": 1,
							"rowIndex": 6
						});
						var output_144 = new cpr.controls.Output();
						output_144.value = "true";
						output_144.style.setClasses(["text-center"]);
						container.addChild(output_144, {
							"colIndex": 2,
							"rowIndex": 6
						});
						var output_145 = new cpr.controls.Output();
						output_145.value = "트리 셀에 최상위 연결선이 보여줄지 여부";
						container.addChild(output_145, {
							"colIndex": 3,
							"rowIndex": 6
						});
						var output_146 = new cpr.controls.Output();
						output_146.value = "startCollapseLevel";
						output_146.unselectable = false;
						output_146.style.setClasses(["pb-label"]);
						container.addChild(output_146, {
							"colIndex": 0,
							"rowIndex": 7
						});
						var output_147 = new cpr.controls.Output();
						output_147.value = "○";
						output_147.style.setClasses(["text-center"]);
						container.addChild(output_147, {
							"colIndex": 1,
							"rowIndex": 7
						});
						var output_148 = new cpr.controls.Output();
						output_148.value = "-1";
						output_148.style.setClasses(["text-center"]);
						container.addChild(output_148, {
							"colIndex": 2,
							"rowIndex": 7
						});
						var output_149 = new cpr.controls.Output();
						output_149.value = "초기에 접을 아이템의 레벨. 해당 속성을 사용하지 않음";
						container.addChild(output_149, {
							"colIndex": 3,
							"rowIndex": 7
						});
						var output_150 = new cpr.controls.Output();
						output_150.value = "tooltip";
						output_150.unselectable = false;
						output_150.style.setClasses(["pb-label"]);
						container.addChild(output_150, {
							"colIndex": 0,
							"rowIndex": 8
						});
						var output_151 = new cpr.controls.Output();
						output_151.value = "△";
						output_151.style.setClasses(["text-center"]);
						container.addChild(output_151, {
							"colIndex": 1,
							"rowIndex": 8
						});
						var output_152 = new cpr.controls.Output();
						output_152.value = "(컨트롤의 힌트)";
						output_152.style.setClasses(["text-center"]);
						container.addChild(output_152, {
							"colIndex": 2,
							"rowIndex": 8
						});
						var output_153 = new cpr.controls.Output();
						output_153.value = "마우스 오버 시 인풋박스에 대한 힌트 제공 필요할 때 사용. 해당 속성을 작성하면 title 속성으로 적용됨";
						container.addChild(output_153, {
							"colIndex": 3,
							"rowIndex": 8
						});
						var output_154 = new cpr.controls.Output();
						output_154.value = "useIcon";
						output_154.unselectable = false;
						output_154.style.setClasses(["pb-label"]);
						container.addChild(output_154, {
							"colIndex": 0,
							"rowIndex": 9
						});
						var output_155 = new cpr.controls.Output();
						output_155.value = "●";
						output_155.style.setClasses(["text-center"]);
						container.addChild(output_155, {
							"colIndex": 1,
							"rowIndex": 9
						});
						var output_156 = new cpr.controls.Output();
						output_156.value = "true | false";
						output_156.style.setClasses(["text-center"]);
						container.addChild(output_156, {
							"colIndex": 2,
							"rowIndex": 9
						});
						var output_157 = new cpr.controls.Output();
						output_157.value = "폴더 아이콘 또는 파일 아이콘 사용 여부에 따라 해당 속성 값을 변경";
						container.addChild(output_157, {
							"colIndex": 3,
							"rowIndex": 9
						});
					})(group_20);
					container.addChild(group_20, {
						"autoSize": "height",
						"width": "400px",
						"height": "344px"
					});
				})(group_19);
				container.addChild(group_19, {
					"autoSize": "height",
					"width": "1544px",
					"height": "405px"
				});
			})(group_16);
			container.addChild(group_16, {
				"autoSize": "height",
				"width": "1644px",
				"height": "829px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "[디자인가이드] 그리드";
	cpr.core.Platform.INSTANCE.register(app);
})();
