/*
 * App URI: pb/guide/CheckBox
 * Source Location: pb/guide/CheckBox.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function() {
	var app = new cpr.core.App("pb/guide/CheckBox", { 
		onPrepare: function(loader) {
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports) {
			var linker = {};
			// Start - User Script
			/************************************************
			 * CheckBox.js
			 * Created at 2022. 5. 30. 오전 10:32:26.
			 *
			 * @author ryu
			 ************************************************/

			/*
			 * 루트 컨테이너에서 load 이벤트 발생 시 호출.
			 * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */
			function onBodyLoad(e){
				app.getContainer().getAllRecursiveChildren(false).filter(function(each){
					return each.style.hasClass("switch03");
				}).forEach(function(/* cpr.controls.CheckBox */ each){
					each.addEventListener("value-change", function(e){
						var control = e.control;
						if (control.checked){
							control.iconAlign = "right";
						} else {
							control.iconAlign = "left";
						}
					});
				});
			};
			// End - User Script
			
			// Header
			app.supportMedia("all and (min-width: 1644px)", "default");
			app.supportMedia("all and (max-width: 1643px)", "tablet");
			
			// Configure root container
			var container = app.getContainer();
			container.style.setClasses(["pb-body"]);
			container.style.css({
				"width" : "100%",
				"height" : "100%"
			});
			
			// Layout
			var verticalLayout_1 = new cpr.controls.layouts.VerticalLayout();
			verticalLayout_1.spacing = 14;
			container.setLayout(verticalLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container();
			group_1.style.setClasses(["pb-content"]);
			var verticalLayout_2 = new cpr.controls.layouts.VerticalLayout();
			verticalLayout_2.scrollable = false;
			verticalLayout_2.spacing = 20;
			verticalLayout_2.leftMargin = 50;
			verticalLayout_2.rightMargin = 50;
			verticalLayout_2.topMargin = 0;
			verticalLayout_2.bottomMargin = 20;
			group_1.setLayout(verticalLayout_2);
			(function(container){
				var userDefinedControl_1 = new udc.hk.pb.Breadcrumbs();
				container.addChild(userDefinedControl_1, {
					"autoSize": "height",
					"width": "1544px",
					"height": "174px"
				});
				var output_1 = new cpr.controls.Output();
				output_1.value = "\u203b 기타 지시문 작성";
				output_1.style.setClasses(["text-red"]);
				container.addChild(output_1, {
					"autoSize": "height",
					"width": "100px",
					"height": "20px",
					"minHeight": 20
				});
			})(group_1);
			container.addChild(group_1, {
				"autoSize": "height",
				"width": "1644px",
				"height": "242px"
			});
			
			var group_2 = new cpr.controls.Container();
			group_2.style.setClasses(["pb-content"]);
			var verticalLayout_3 = new cpr.controls.layouts.VerticalLayout();
			verticalLayout_3.scrollable = false;
			verticalLayout_3.spacing = 40;
			verticalLayout_3.leftMargin = 50;
			verticalLayout_3.rightMargin = 50;
			verticalLayout_3.topMargin = 50;
			verticalLayout_3.bottomMargin = 50;
			group_2.setLayout(verticalLayout_3);
			(function(container){
				var group_3 = new cpr.controls.Container();
				var verticalLayout_4 = new cpr.controls.layouts.VerticalLayout();
				verticalLayout_4.scrollable = false;
				verticalLayout_4.spacing = 14;
				group_3.setLayout(verticalLayout_4);
				(function(container){
					var userDefinedControl_2 = new udc.hk.pb.SectionTitle();
					userDefinedControl_2.title = "체크박스";
					container.addChild(userDefinedControl_2, {
						"width": "1544px",
						"height": "29px"
					});
					var group_4 = new cpr.controls.Container();
					group_4.style.setClasses(["pb-form"]);
					var formLayout_1 = new cpr.controls.layouts.FormLayout();
					formLayout_1.scrollable = false;
					formLayout_1.topMargin = "26px";
					formLayout_1.rightMargin = "0px";
					formLayout_1.bottomMargin = "26px";
					formLayout_1.leftMargin = "0px";
					formLayout_1.horizontalSpacing = "8px";
					formLayout_1.verticalSpacing = "10px";
					formLayout_1.setColumns(["68px", "1fr", "59px", "1fr", "58px", "1fr"]);
					formLayout_1.setColumnAutoSizing(0, true);
					formLayout_1.setColumnAutoSizing(2, true);
					formLayout_1.setColumnAutoSizing(4, true);
					formLayout_1.setRows(["26px"]);
					group_4.setLayout(formLayout_1);
					(function(container){
						var output_2 = new cpr.controls.Output();
						output_2.value = "Inactive";
						output_2.style.setClasses(["label"]);
						container.addChild(output_2, {
							"colIndex": 0,
							"rowIndex": 0
						});
						var checkBox_1 = new cpr.controls.CheckBox();
						checkBox_1.value = "true";
						checkBox_1.text = "체크박스";
						container.addChild(checkBox_1, {
							"colIndex": 1,
							"rowIndex": 0
						});
						var output_3 = new cpr.controls.Output();
						output_3.value = "Focused";
						output_3.style.setClasses(["label"]);
						container.addChild(output_3, {
							"colIndex": 2,
							"rowIndex": 0
						});
						var checkBox_2 = new cpr.controls.CheckBox();
						checkBox_2.text = "체크박스";
						checkBox_2.style.setClasses(["cl-focus"]);
						container.addChild(checkBox_2, {
							"colIndex": 3,
							"rowIndex": 0
						});
						var output_4 = new cpr.controls.Output();
						output_4.value = "Disabled";
						output_4.style.setClasses(["label"]);
						container.addChild(output_4, {
							"colIndex": 4,
							"rowIndex": 0
						});
						var checkBox_3 = new cpr.controls.CheckBox();
						checkBox_3.enabled = false;
						checkBox_3.value = "true";
						checkBox_3.text = "체크박스";
						container.addChild(checkBox_3, {
							"colIndex": 5,
							"rowIndex": 0
						});
					})(group_4);
					container.addChild(group_4, {
						"autoSize": "height",
						"width": "400px",
						"height": "127px"
					});
				})(group_3);
				container.addChild(group_3, {
					"autoSize": "height",
					"width": "1544px",
					"height": "170px"
				});
				var group_5 = new cpr.controls.Container();
				var verticalLayout_5 = new cpr.controls.layouts.VerticalLayout();
				verticalLayout_5.scrollable = false;
				verticalLayout_5.spacing = 14;
				group_5.setLayout(verticalLayout_5);
				(function(container){
					var userDefinedControl_3 = new udc.hk.pb.SectionTitle();
					userDefinedControl_3.title = "기본속성";
					userDefinedControl_3.subText = "● = 사용 / ○ = 미사용 / △ = 상황에 따라 사용 / ★ = 필수로 작성";
					userDefinedControl_3.subTextStyle = "text-red";
					container.addChild(userDefinedControl_3, {
						"autoSize": "none",
						"width": "1544px",
						"height": "29px"
					});
					var group_6 = new cpr.controls.Container();
					group_6.style.setClasses(["pb-table"]);
					var formLayout_2 = new cpr.controls.layouts.FormLayout();
					formLayout_2.scrollable = false;
					formLayout_2.topMargin = "4px";
					formLayout_2.rightMargin = "4px";
					formLayout_2.bottomMargin = "4px";
					formLayout_2.leftMargin = "4px";
					formLayout_2.horizontalSpacing = "8px";
					formLayout_2.verticalSpacing = "8px";
					formLayout_2.horizontalSeparatorWidth = 1;
					formLayout_2.verticalSeparatorWidth = 1;
					formLayout_2.setColumns(["150px", "60px", "220px", "1fr"]);
					formLayout_2.setUseColumnShade(0, true);
					formLayout_2.setRows(["28px", "26px", "26px", "26px", "26px", "26px", "26px"]);
					formLayout_2.setUseRowShade(0, true);
					formLayout_2.setRowAutoSizing(1, true);
					formLayout_2.setRowAutoSizing(2, true);
					formLayout_2.setRowAutoSizing(3, true);
					formLayout_2.setRowAutoSizing(4, true);
					formLayout_2.setRowAutoSizing(5, true);
					formLayout_2.setRowAutoSizing(6, true);
					group_6.setLayout(formLayout_2);
					(function(container){
						var output_5 = new cpr.controls.Output();
						output_5.value = "속성명";
						output_5.style.setClasses(["pb-label"]);
						container.addChild(output_5, {
							"colIndex": 0,
							"rowIndex": 0
						});
						var output_6 = new cpr.controls.Output();
						output_6.value = "사용여부";
						output_6.style.setClasses(["pb-label"]);
						container.addChild(output_6, {
							"colIndex": 1,
							"rowIndex": 0
						});
						var output_7 = new cpr.controls.Output();
						output_7.value = "적용값";
						output_7.style.setClasses(["pb-label"]);
						container.addChild(output_7, {
							"colIndex": 2,
							"rowIndex": 0
						});
						var output_8 = new cpr.controls.Output();
						output_8.value = "내용";
						output_8.style.setClasses(["pb-label"]);
						container.addChild(output_8, {
							"colIndex": 3,
							"rowIndex": 0
						});
						var output_9 = new cpr.controls.Output();
						output_9.value = "falseValue";
						output_9.style.setClasses(["pb-label"]);
						container.addChild(output_9, {
							"colIndex": 0,
							"rowIndex": 1
						});
						var output_10 = new cpr.controls.Output();
						output_10.value = "●";
						output_10.style.setClasses(["text-center"]);
						container.addChild(output_10, {
							"colIndex": 1,
							"rowIndex": 1
						});
						var output_11 = new cpr.controls.Output();
						output_11.value = "(개발 공통에 따름)";
						output_11.style.setClasses(["text-center"]);
						container.addChild(output_11, {
							"colIndex": 2,
							"rowIndex": 1
						});
						var output_12 = new cpr.controls.Output();
						output_12.value = "falseValue가 Empty String이 아닌 경우 반드시 지정";
						container.addChild(output_12, {
							"colIndex": 3,
							"rowIndex": 1
						});
						var output_13 = new cpr.controls.Output();
						output_13.value = "fieldLabel";
						output_13.style.setClasses(["pb-label"]);
						container.addChild(output_13, {
							"colIndex": 0,
							"rowIndex": 2
						});
						var output_14 = new cpr.controls.Output();
						output_14.value = "★";
						output_14.style.setClasses(["text-center"]);
						container.addChild(output_14, {
							"colIndex": 1,
							"rowIndex": 2
						});
						var output_15 = new cpr.controls.Output();
						output_15.value = "(논리적 레이블 값)";
						output_15.style.setClasses(["text-center"]);
						container.addChild(output_15, {
							"colIndex": 2,
							"rowIndex": 2
						});
						var output_16 = new cpr.controls.Output();
						output_16.value = "폼인 경우 1:1로 대응하는 레이블(라벨)의 값을 입력하거나 컨트롤에서 입력되는 값의 논리적인 레이블(라벨)의 값을 입력";
						container.addChild(output_16, {
							"colIndex": 3,
							"rowIndex": 2
						});
						var output_17 = new cpr.controls.Output();
						output_17.value = "hideIcon";
						output_17.style.setClasses(["pb-label"]);
						container.addChild(output_17, {
							"colIndex": 0,
							"rowIndex": 3
						});
						var output_18 = new cpr.controls.Output();
						output_18.value = "△";
						output_18.style.setClasses(["text-center"]);
						container.addChild(output_18, {
							"colIndex": 1,
							"rowIndex": 3
						});
						var output_19 = new cpr.controls.Output();
						output_19.value = "true | false";
						output_19.style.setClasses(["text-center"]);
						container.addChild(output_19, {
							"colIndex": 2,
							"rowIndex": 3
						});
						var output_20 = new cpr.controls.Output();
						output_20.value = "텍스트만 표시되는 체크박스인 경우 해당 속성 사용";
						container.addChild(output_20, {
							"colIndex": 3,
							"rowIndex": 3
						});
						var output_21 = new cpr.controls.Output();
						output_21.value = "iconAlign";
						output_21.style.setClasses(["pb-label"]);
						container.addChild(output_21, {
							"colIndex": 0,
							"rowIndex": 4
						});
						var output_22 = new cpr.controls.Output();
						output_22.value = "●";
						output_22.style.setClasses(["text-center"]);
						container.addChild(output_22, {
							"colIndex": 1,
							"rowIndex": 4
						});
						var output_23 = new cpr.controls.Output();
						output_23.value = "\"top\" | \"right\" | \"bottom\" | \"left\"";
						output_23.style.setClasses(["text-center"]);
						container.addChild(output_23, {
							"colIndex": 2,
							"rowIndex": 4
						});
						var output_24 = new cpr.controls.Output();
						output_24.value = "아이콘이 좌측이 아닌 다른 방향으로 표시되는 경우 해당 속성을 변경";
						container.addChild(output_24, {
							"colIndex": 3,
							"rowIndex": 4
						});
						var output_25 = new cpr.controls.Output();
						output_25.value = "tooltip";
						output_25.style.setClasses(["pb-label"]);
						container.addChild(output_25, {
							"colIndex": 0,
							"rowIndex": 5
						});
						var output_26 = new cpr.controls.Output();
						output_26.value = "△";
						output_26.style.setClasses(["text-center"]);
						container.addChild(output_26, {
							"colIndex": 1,
							"rowIndex": 5
						});
						var output_27 = new cpr.controls.Output();
						output_27.value = "(컨트롤의 힌트값)";
						output_27.style.setClasses(["text-center"]);
						container.addChild(output_27, {
							"colIndex": 2,
							"rowIndex": 5
						});
						var output_28 = new cpr.controls.Output();
						output_28.value = "마우스 오버 시 인풋박스에 대한 힌트 제공 필요할 때 사용. 해당 속성을 작성하면 title 속성으로 적용됨";
						container.addChild(output_28, {
							"colIndex": 3,
							"rowIndex": 5
						});
						var output_29 = new cpr.controls.Output();
						output_29.value = "trueValue";
						output_29.style.setClasses(["pb-label"]);
						container.addChild(output_29, {
							"colIndex": 0,
							"rowIndex": 6
						});
						var output_30 = new cpr.controls.Output();
						output_30.value = "●";
						output_30.style.setClasses(["text-center"]);
						container.addChild(output_30, {
							"colIndex": 1,
							"rowIndex": 6
						});
						var output_31 = new cpr.controls.Output();
						output_31.value = "(개발 공통에 따름)";
						output_31.style.setClasses(["text-center"]);
						container.addChild(output_31, {
							"colIndex": 2,
							"rowIndex": 6
						});
						var output_32 = new cpr.controls.Output();
						output_32.value = "trueValue가 \"true\"가 아닌 경우 반드시 지정";
						container.addChild(output_32, {
							"colIndex": 3,
							"rowIndex": 6
						});
					})(group_6);
					container.addChild(group_6, {
						"autoSize": "height",
						"width": "400px",
						"height": "242px"
					});
				})(group_5);
				container.addChild(group_5, {
					"autoSize": "height",
					"width": "1544px",
					"height": "297px"
				});
			})(group_2);
			container.addChild(group_2, {
				"autoSize": "height",
				"width": "400px",
				"height": "602px"
			});
			
			var group_7 = new cpr.controls.Container();
			group_7.style.setClasses(["pb-content"]);
			var verticalLayout_6 = new cpr.controls.layouts.VerticalLayout();
			verticalLayout_6.scrollable = false;
			verticalLayout_6.spacing = 40;
			verticalLayout_6.leftMargin = 50;
			verticalLayout_6.rightMargin = 50;
			verticalLayout_6.topMargin = 50;
			verticalLayout_6.bottomMargin = 50;
			group_7.setLayout(verticalLayout_6);
			(function(container){
				var group_8 = new cpr.controls.Container();
				var verticalLayout_7 = new cpr.controls.layouts.VerticalLayout();
				verticalLayout_7.scrollable = false;
				verticalLayout_7.spacing = 14;
				group_8.setLayout(verticalLayout_7);
				(function(container){
					var userDefinedControl_4 = new udc.hk.pb.SectionTitle();
					userDefinedControl_4.title = "클래스";
					container.addChild(userDefinedControl_4, {
						"autoSize": "none",
						"width": "1544px",
						"height": "29px"
					});
					var group_9 = new cpr.controls.Container();
					group_9.style.setClasses(["pb-table"]);
					var formLayout_3 = new cpr.controls.layouts.FormLayout();
					formLayout_3.scrollable = false;
					formLayout_3.topMargin = "4px";
					formLayout_3.rightMargin = "4px";
					formLayout_3.bottomMargin = "4px";
					formLayout_3.leftMargin = "4px";
					formLayout_3.horizontalSpacing = "8px";
					formLayout_3.verticalSpacing = "8px";
					formLayout_3.horizontalSeparatorWidth = 1;
					formLayout_3.verticalSeparatorWidth = 1;
					formLayout_3.setColumns(["150px", "120px", "1fr"]);
					formLayout_3.setUseColumnShade(0, true);
					formLayout_3.setColumnAutoSizing(1, true);
					formLayout_3.setRows(["28px", "26px", "28px", "26px", "26px"]);
					formLayout_3.setUseRowShade(0, true);
					group_9.setLayout(formLayout_3);
					(function(container){
						var output_33 = new cpr.controls.Output();
						output_33.value = "클래스명";
						output_33.style.setClasses(["pb-label"]);
						container.addChild(output_33, {
							"colIndex": 0,
							"rowIndex": 0
						});
						var output_34 = new cpr.controls.Output();
						output_34.value = "적용";
						output_34.style.setClasses(["pb-label"]);
						container.addChild(output_34, {
							"colIndex": 1,
							"rowIndex": 0
						});
						var output_35 = new cpr.controls.Output();
						output_35.value = "내용";
						output_35.style.setClasses(["pb-label"]);
						container.addChild(output_35, {
							"colIndex": 2,
							"rowIndex": 0
						});
						var output_36 = new cpr.controls.Output();
						output_36.value = "text-center";
						output_36.style.setClasses(["pb-label"]);
						container.addChild(output_36, {
							"colIndex": 0,
							"rowIndex": 1
						});
						var checkBox_4 = new cpr.controls.CheckBox();
						checkBox_4.text = "체크박스";
						checkBox_4.style.setClasses(["text-center"]);
						container.addChild(checkBox_4, {
							"colIndex": 1,
							"rowIndex": 1
						});
						var output_37 = new cpr.controls.Output();
						container.addChild(output_37, {
							"colIndex": 2,
							"rowIndex": 1
						});
						var output_38 = new cpr.controls.Output();
						output_38.value = "switch01";
						output_38.style.setClasses(["pb-label"]);
						container.addChild(output_38, {
							"colIndex": 0,
							"rowIndex": 2
						});
						var checkBox_5 = new cpr.controls.CheckBox();
						checkBox_5.text = "";
						checkBox_5.style.setClasses(["switch01"]);
						container.addChild(checkBox_5, {
							"colIndex": 1,
							"rowIndex": 2,
							"verticalAlign": "center",
							"height": 26
						});
						var output_39 = new cpr.controls.Output();
						container.addChild(output_39, {
							"colIndex": 2,
							"rowIndex": 2
						});
						var output_40 = new cpr.controls.Output();
						output_40.value = "switch02";
						output_40.style.setClasses(["pb-label"]);
						container.addChild(output_40, {
							"colIndex": 0,
							"rowIndex": 3
						});
						var checkBox_6 = new cpr.controls.CheckBox();
						checkBox_6.text = "";
						checkBox_6.style.setClasses(["switch02"]);
						container.addChild(checkBox_6, {
							"colIndex": 1,
							"rowIndex": 3,
							"verticalAlign": "center",
							"height": 16
						});
						var output_41 = new cpr.controls.Output();
						container.addChild(output_41, {
							"colIndex": 2,
							"rowIndex": 3
						});
						var output_42 = new cpr.controls.Output();
						output_42.value = "switch03";
						output_42.style.setClasses(["pb-label"]);
						container.addChild(output_42, {
							"colIndex": 0,
							"rowIndex": 4
						});
						var output_43 = new cpr.controls.Output();
						output_43.value = "switch01에서 텍스트를 유동적으로 변경하는 경우 다음의 스타일을 사용. 반드시 ON 상태일 때 iconAlign을 \"right\"로 한다. (스크립트 참조)";
						container.addChild(output_43, {
							"colIndex": 2,
							"rowIndex": 4
						});
						var group_10 = new cpr.controls.Container();
						var flowLayout_1 = new cpr.controls.layouts.FlowLayout();
						flowLayout_1.scrollable = false;
						flowLayout_1.horizontalSpacing = 0;
						flowLayout_1.verticalSpacing = 0;
						flowLayout_1.lineWrap = false;
						group_10.setLayout(flowLayout_1);
						(function(container){
							var checkBox_7 = new cpr.controls.CheckBox();
							checkBox_7.style.setClasses(["switch03"]);
							checkBox_7.bind("text").toExpression("checked ? \"ON\" : \"OFF\"");
							container.addChild(checkBox_7, {
								"autoSize": "width",
								"width": "82px",
								"height": "26px"
							});
						})(group_10);
						container.addChild(group_10, {
							"colIndex": 1,
							"rowIndex": 4,
							"colSpan": 1,
							"rowSpan": 1
						});
					})(group_9);
					container.addChild(group_9, {
						"autoSize": "height",
						"width": "400px",
						"height": "176px"
					});
				})(group_8);
				container.addChild(group_8, {
					"autoSize": "height",
					"width": "1544px",
					"height": "221px"
				});
			})(group_7);
			container.addChild(group_7, {
				"autoSize": "height",
				"width": "400px",
				"height": "297px"
			});
			
			var group_11 = new cpr.controls.Container();
			group_11.style.setClasses(["pb-content"]);
			var verticalLayout_8 = new cpr.controls.layouts.VerticalLayout();
			verticalLayout_8.scrollable = false;
			verticalLayout_8.spacing = 40;
			verticalLayout_8.leftMargin = 50;
			verticalLayout_8.rightMargin = 50;
			verticalLayout_8.topMargin = 50;
			verticalLayout_8.bottomMargin = 50;
			group_11.setLayout(verticalLayout_8);
			(function(container){
				var group_12 = new cpr.controls.Container();
				var verticalLayout_9 = new cpr.controls.layouts.VerticalLayout();
				verticalLayout_9.scrollable = false;
				verticalLayout_9.spacing = 14;
				group_12.setLayout(verticalLayout_9);
				(function(container){
					var userDefinedControl_5 = new udc.hk.pb.SectionTitle();
					userDefinedControl_5.title = "체크박스그룹";
					container.addChild(userDefinedControl_5, {
						"width": "1544px",
						"height": "29px"
					});
					var group_13 = new cpr.controls.Container();
					group_13.style.setClasses(["pb-form"]);
					var formLayout_4 = new cpr.controls.layouts.FormLayout();
					formLayout_4.scrollable = false;
					formLayout_4.topMargin = "26px";
					formLayout_4.rightMargin = "0px";
					formLayout_4.bottomMargin = "26px";
					formLayout_4.leftMargin = "0px";
					formLayout_4.horizontalSpacing = "8px";
					formLayout_4.verticalSpacing = "10px";
					formLayout_4.setColumns(["68px", "1fr", "59px", "1fr", "58px", "1fr"]);
					formLayout_4.setColumnAutoSizing(0, true);
					formLayout_4.setColumnAutoSizing(2, true);
					formLayout_4.setColumnAutoSizing(4, true);
					formLayout_4.setRows(["26px"]);
					group_13.setLayout(formLayout_4);
					(function(container){
						var output_44 = new cpr.controls.Output();
						output_44.value = "Inactive";
						output_44.style.setClasses(["label"]);
						container.addChild(output_44, {
							"colIndex": 0,
							"rowIndex": 0
						});
						var checkBoxGroup_1 = new cpr.controls.CheckBoxGroup();
						checkBoxGroup_1.values = ["value2"];
						checkBoxGroup_1.colCount = -1;
						checkBoxGroup_1.fixedWidth = false;
						(function(checkBoxGroup_1){
							checkBoxGroup_1.addItem(new cpr.controls.Item("체크박스", "value1"));
							checkBoxGroup_1.addItem(new cpr.controls.Item("체크박스", "value2"));
							checkBoxGroup_1.addItem(new cpr.controls.Item("체크박스", "value3"));
						})(checkBoxGroup_1);
						container.addChild(checkBoxGroup_1, {
							"colIndex": 1,
							"rowIndex": 0
						});
						var output_45 = new cpr.controls.Output();
						output_45.value = "Focused";
						output_45.style.setClasses(["label"]);
						container.addChild(output_45, {
							"colIndex": 2,
							"rowIndex": 0
						});
						var checkBoxGroup_2 = new cpr.controls.CheckBoxGroup();
						checkBoxGroup_2.values = ["value2"];
						checkBoxGroup_2.colCount = -1;
						checkBoxGroup_2.fixedWidth = false;
						checkBoxGroup_2.style.setClasses(["cl-focus"]);
						checkBoxGroup_2.style.item.setClasses(["cl-focus"]);
						(function(checkBoxGroup_2){
							checkBoxGroup_2.addItem(new cpr.controls.Item("체크박스", "value1"));
							checkBoxGroup_2.addItem(new cpr.controls.Item("체크박스", "value2"));
							checkBoxGroup_2.addItem(new cpr.controls.Item("체크박스", "value3"));
						})(checkBoxGroup_2);
						container.addChild(checkBoxGroup_2, {
							"colIndex": 3,
							"rowIndex": 0
						});
						var output_46 = new cpr.controls.Output();
						output_46.value = "Disabled";
						output_46.style.setClasses(["label"]);
						container.addChild(output_46, {
							"colIndex": 4,
							"rowIndex": 0
						});
						var checkBoxGroup_3 = new cpr.controls.CheckBoxGroup();
						checkBoxGroup_3.values = ["value2"];
						checkBoxGroup_3.enabled = false;
						checkBoxGroup_3.colCount = -1;
						checkBoxGroup_3.fixedWidth = false;
						(function(checkBoxGroup_3){
							checkBoxGroup_3.addItem(new cpr.controls.Item("체크박스", "value1"));
							checkBoxGroup_3.addItem(new cpr.controls.Item("체크박스", "value2"));
							checkBoxGroup_3.addItem(new cpr.controls.Item("체크박스", "value3"));
						})(checkBoxGroup_3);
						container.addChild(checkBoxGroup_3, {
							"colIndex": 5,
							"rowIndex": 0
						});
					})(group_13);
					container.addChild(group_13, {
						"autoSize": "height",
						"width": "400px",
						"height": "79px"
					});
				})(group_12);
				container.addChild(group_12, {
					"autoSize": "height",
					"width": "1544px",
					"height": "170px"
				});
				var group_14 = new cpr.controls.Container();
				var verticalLayout_10 = new cpr.controls.layouts.VerticalLayout();
				verticalLayout_10.scrollable = false;
				verticalLayout_10.spacing = 14;
				group_14.setLayout(verticalLayout_10);
				(function(container){
					var userDefinedControl_6 = new udc.hk.pb.SectionTitle();
					userDefinedControl_6.title = "기본속성";
					userDefinedControl_6.subText = "● = 사용 / ○ = 미사용 / △ = 상황에 따라 사용 / ★ = 필수로 작성";
					userDefinedControl_6.subTextStyle = "text-red";
					container.addChild(userDefinedControl_6, {
						"autoSize": "none",
						"width": "1544px",
						"height": "29px"
					});
					var group_15 = new cpr.controls.Container();
					group_15.style.setClasses(["pb-table"]);
					var formLayout_5 = new cpr.controls.layouts.FormLayout();
					formLayout_5.scrollable = false;
					formLayout_5.topMargin = "4px";
					formLayout_5.rightMargin = "4px";
					formLayout_5.bottomMargin = "4px";
					formLayout_5.leftMargin = "4px";
					formLayout_5.horizontalSpacing = "8px";
					formLayout_5.verticalSpacing = "8px";
					formLayout_5.horizontalSeparatorWidth = 1;
					formLayout_5.verticalSeparatorWidth = 1;
					formLayout_5.setColumns(["150px", "60px", "220px", "1fr"]);
					formLayout_5.setUseColumnShade(0, true);
					formLayout_5.setRows(["28px", "26px", "26px", "26px", "26px", "26px", "26px", "26px", "26px", "26px"]);
					formLayout_5.setUseRowShade(0, true);
					formLayout_5.setRowAutoSizing(1, true);
					formLayout_5.setRowAutoSizing(2, true);
					formLayout_5.setRowAutoSizing(3, true);
					formLayout_5.setRowAutoSizing(4, true);
					formLayout_5.setRowAutoSizing(5, true);
					formLayout_5.setRowAutoSizing(6, true);
					formLayout_5.setRowAutoSizing(7, true);
					formLayout_5.setRowAutoSizing(8, true);
					formLayout_5.setRowAutoSizing(9, true);
					group_15.setLayout(formLayout_5);
					(function(container){
						var output_47 = new cpr.controls.Output();
						output_47.value = "속성명";
						output_47.style.setClasses(["pb-label"]);
						container.addChild(output_47, {
							"colIndex": 0,
							"rowIndex": 0
						});
						var output_48 = new cpr.controls.Output();
						output_48.value = "사용여부";
						output_48.style.setClasses(["pb-label"]);
						container.addChild(output_48, {
							"colIndex": 1,
							"rowIndex": 0
						});
						var output_49 = new cpr.controls.Output();
						output_49.value = "적용값";
						output_49.style.setClasses(["pb-label"]);
						container.addChild(output_49, {
							"colIndex": 2,
							"rowIndex": 0
						});
						var output_50 = new cpr.controls.Output();
						output_50.value = "내용";
						output_50.style.setClasses(["pb-label"]);
						container.addChild(output_50, {
							"colIndex": 3,
							"rowIndex": 0
						});
						var output_51 = new cpr.controls.Output();
						output_51.value = "colCount";
						output_51.style.setClasses(["pb-label"]);
						container.addChild(output_51, {
							"colIndex": 0,
							"rowIndex": 1
						});
						var output_52 = new cpr.controls.Output();
						output_52.value = "●";
						output_52.style.setClasses(["text-center"]);
						container.addChild(output_52, {
							"colIndex": 1,
							"rowIndex": 1
						});
						var output_53 = new cpr.controls.Output();
						output_53.value = "-1";
						output_53.style.setClasses(["text-center"]);
						container.addChild(output_53, {
							"colIndex": 2,
							"rowIndex": 1
						});
						var output_54 = new cpr.controls.Output();
						output_54.value = "아이템을 플로우 레이아웃의 형태로 배치하는 경우 \"-1\"의 값을 적용. 상황에 따라 \"0\"이상의 값을 설정할 수 있음";
						container.addChild(output_54, {
							"colIndex": 3,
							"rowIndex": 1
						});
						var output_55 = new cpr.controls.Output();
						output_55.value = "falseValue";
						output_55.style.setClasses(["pb-label"]);
						container.addChild(output_55, {
							"colIndex": 0,
							"rowIndex": 2
						});
						var output_56 = new cpr.controls.Output();
						output_56.value = "●";
						output_56.style.setClasses(["text-center"]);
						container.addChild(output_56, {
							"colIndex": 1,
							"rowIndex": 2
						});
						var output_57 = new cpr.controls.Output();
						output_57.value = "(개발 공통에 따름)";
						output_57.style.setClasses(["text-center"]);
						container.addChild(output_57, {
							"colIndex": 2,
							"rowIndex": 2
						});
						var output_58 = new cpr.controls.Output();
						output_58.value = "falseValue가 Empty String이 아닌 경우 반드시 지정";
						container.addChild(output_58, {
							"colIndex": 3,
							"rowIndex": 2
						});
						var output_59 = new cpr.controls.Output();
						output_59.value = "fieldLabel";
						output_59.style.setClasses(["pb-label"]);
						container.addChild(output_59, {
							"colIndex": 0,
							"rowIndex": 3
						});
						var output_60 = new cpr.controls.Output();
						output_60.value = "★";
						output_60.style.setClasses(["text-center"]);
						container.addChild(output_60, {
							"colIndex": 1,
							"rowIndex": 3
						});
						var output_61 = new cpr.controls.Output();
						output_61.value = "(논리적 레이블 값)";
						output_61.style.setClasses(["text-center"]);
						container.addChild(output_61, {
							"colIndex": 2,
							"rowIndex": 3
						});
						var output_62 = new cpr.controls.Output();
						output_62.value = "폼인 경우 1:1로 대응하는 레이블(라벨)의 값을 입력하거나 컨트롤에서 입력되는 값의 논리적인 레이블(라벨)의 값을 입력";
						container.addChild(output_62, {
							"colIndex": 3,
							"rowIndex": 3
						});
						var output_63 = new cpr.controls.Output();
						output_63.value = "fixedWidth";
						output_63.style.setClasses(["pb-label"]);
						container.addChild(output_63, {
							"colIndex": 0,
							"rowIndex": 4
						});
						var output_64 = new cpr.controls.Output();
						output_64.value = "●";
						output_64.style.setClasses(["text-center"]);
						container.addChild(output_64, {
							"colIndex": 1,
							"rowIndex": 4
						});
						var output_65 = new cpr.controls.Output();
						output_65.value = "false";
						output_65.style.setClasses(["text-center"]);
						container.addChild(output_65, {
							"colIndex": 2,
							"rowIndex": 4
						});
						var output_66 = new cpr.controls.Output();
						output_66.value = "아이템의 텍스트 크기에 맞게 표시하기 위해 fixedWidth=\"false\"로 지정한다.";
						container.addChild(output_66, {
							"colIndex": 3,
							"rowIndex": 4
						});
						var output_67 = new cpr.controls.Output();
						output_67.value = "hideIcon";
						output_67.style.setClasses(["pb-label"]);
						container.addChild(output_67, {
							"colIndex": 0,
							"rowIndex": 5
						});
						var output_68 = new cpr.controls.Output();
						output_68.value = "△";
						output_68.style.setClasses(["text-center"]);
						container.addChild(output_68, {
							"colIndex": 1,
							"rowIndex": 5
						});
						var output_69 = new cpr.controls.Output();
						output_69.value = "true | false";
						output_69.style.setClasses(["text-center"]);
						container.addChild(output_69, {
							"colIndex": 2,
							"rowIndex": 5
						});
						var output_70 = new cpr.controls.Output();
						output_70.value = "텍스트만 표시되는 체크박스인 경우 해당 속성 사용";
						container.addChild(output_70, {
							"colIndex": 3,
							"rowIndex": 5
						});
						var output_71 = new cpr.controls.Output();
						output_71.value = "horizontalSpacing";
						output_71.style.setClasses(["pb-label"]);
						container.addChild(output_71, {
							"colIndex": 0,
							"rowIndex": 6
						});
						var output_72 = new cpr.controls.Output();
						output_72.value = "●";
						output_72.style.setClasses(["text-center"]);
						container.addChild(output_72, {
							"colIndex": 1,
							"rowIndex": 6
						});
						var output_73 = new cpr.controls.Output();
						output_73.value = "20";
						output_73.style.setClasses(["text-center"]);
						container.addChild(output_73, {
							"colIndex": 2,
							"rowIndex": 6
						});
						var output_74 = new cpr.controls.Output();
						output_74.value = "아이템 간 가로 간격";
						container.addChild(output_74, {
							"colIndex": 3,
							"rowIndex": 6
						});
						var output_75 = new cpr.controls.Output();
						output_75.value = "iconAlign";
						output_75.style.setClasses(["pb-label"]);
						container.addChild(output_75, {
							"colIndex": 0,
							"rowIndex": 7
						});
						var output_76 = new cpr.controls.Output();
						output_76.value = "△";
						output_76.style.setClasses(["text-center"]);
						container.addChild(output_76, {
							"colIndex": 1,
							"rowIndex": 7
						});
						var output_77 = new cpr.controls.Output();
						output_77.value = "\"top\" | \"right\" | \"bottom\" | \"left\"";
						output_77.style.setClasses(["text-center"]);
						container.addChild(output_77, {
							"colIndex": 2,
							"rowIndex": 7
						});
						var output_78 = new cpr.controls.Output();
						output_78.value = "아이콘이 좌측이 아닌 다른 방향으로 표시되는 경우 해당 속성을 변경";
						container.addChild(output_78, {
							"colIndex": 3,
							"rowIndex": 7
						});
						var output_79 = new cpr.controls.Output();
						output_79.value = "tooltip";
						output_79.style.setClasses(["pb-label"]);
						container.addChild(output_79, {
							"colIndex": 0,
							"rowIndex": 8
						});
						var output_80 = new cpr.controls.Output();
						output_80.value = "△";
						output_80.style.setClasses(["text-center"]);
						container.addChild(output_80, {
							"colIndex": 1,
							"rowIndex": 8
						});
						var output_81 = new cpr.controls.Output();
						output_81.value = "(컨트롤의 힌트값)";
						output_81.style.setClasses(["text-center"]);
						container.addChild(output_81, {
							"colIndex": 2,
							"rowIndex": 8
						});
						var output_82 = new cpr.controls.Output();
						output_82.value = "마우스 오버 시 인풋박스에 대한 힌트 제공 필요할 때 사용. 해당 속성을 작성하면 title 속성으로 적용됨";
						container.addChild(output_82, {
							"colIndex": 3,
							"rowIndex": 8
						});
						var output_83 = new cpr.controls.Output();
						output_83.value = "verticalSpacing";
						output_83.style.setClasses(["pb-label"]);
						container.addChild(output_83, {
							"colIndex": 0,
							"rowIndex": 9
						});
						var output_84 = new cpr.controls.Output();
						output_84.value = "●";
						output_84.style.setClasses(["text-center"]);
						container.addChild(output_84, {
							"colIndex": 1,
							"rowIndex": 9
						});
						var output_85 = new cpr.controls.Output();
						output_85.value = "5";
						output_85.style.setClasses(["text-center"]);
						container.addChild(output_85, {
							"colIndex": 2,
							"rowIndex": 9
						});
						var output_86 = new cpr.controls.Output();
						output_86.value = "아이템 간 세로 간격";
						container.addChild(output_86, {
							"colIndex": 3,
							"rowIndex": 9
						});
					})(group_15);
					container.addChild(group_15, {
						"autoSize": "height",
						"width": "400px",
						"height": "344px"
					});
				})(group_14);
				container.addChild(group_14, {
					"autoSize": "height",
					"width": "1544px",
					"height": "458px"
				});
			})(group_11);
			container.addChild(group_11, {
				"autoSize": "height",
				"width": "1644px",
				"height": "765px"
			});
			
			var group_16 = new cpr.controls.Container();
			group_16.style.setClasses(["pb-content"]);
			var verticalLayout_11 = new cpr.controls.layouts.VerticalLayout();
			verticalLayout_11.scrollable = false;
			verticalLayout_11.spacing = 40;
			verticalLayout_11.leftMargin = 50;
			verticalLayout_11.rightMargin = 50;
			verticalLayout_11.topMargin = 50;
			verticalLayout_11.bottomMargin = 50;
			group_16.setLayout(verticalLayout_11);
			(function(container){
				var group_17 = new cpr.controls.Container();
				var verticalLayout_12 = new cpr.controls.layouts.VerticalLayout();
				verticalLayout_12.scrollable = false;
				verticalLayout_12.spacing = 14;
				group_17.setLayout(verticalLayout_12);
				(function(container){
					var userDefinedControl_7 = new udc.hk.pb.SectionTitle();
					userDefinedControl_7.title = "클래스";
					container.addChild(userDefinedControl_7, {
						"autoSize": "none",
						"width": "1544px",
						"height": "29px"
					});
					var group_18 = new cpr.controls.Container();
					group_18.style.setClasses(["pb-table"]);
					var formLayout_6 = new cpr.controls.layouts.FormLayout();
					formLayout_6.scrollable = false;
					formLayout_6.topMargin = "4px";
					formLayout_6.rightMargin = "4px";
					formLayout_6.bottomMargin = "4px";
					formLayout_6.leftMargin = "4px";
					formLayout_6.horizontalSpacing = "8px";
					formLayout_6.verticalSpacing = "8px";
					formLayout_6.horizontalSeparatorWidth = 1;
					formLayout_6.verticalSeparatorWidth = 1;
					formLayout_6.setColumns(["150px", "280px", "1fr"]);
					formLayout_6.setUseColumnShade(0, true);
					formLayout_6.setRows(["28px", "26px"]);
					formLayout_6.setUseRowShade(0, true);
					group_18.setLayout(formLayout_6);
					(function(container){
						var output_87 = new cpr.controls.Output();
						output_87.value = "클래스명";
						output_87.style.setClasses(["pb-label"]);
						container.addChild(output_87, {
							"colIndex": 0,
							"rowIndex": 0
						});
						var output_88 = new cpr.controls.Output();
						output_88.value = "적용";
						output_88.style.setClasses(["pb-label"]);
						container.addChild(output_88, {
							"colIndex": 1,
							"rowIndex": 0
						});
						var output_89 = new cpr.controls.Output();
						output_89.value = "내용";
						output_89.style.setClasses(["pb-label"]);
						container.addChild(output_89, {
							"colIndex": 2,
							"rowIndex": 0
						});
						var output_90 = new cpr.controls.Output();
						output_90.value = "text-center";
						output_90.style.setClasses(["pb-label"]);
						container.addChild(output_90, {
							"colIndex": 0,
							"rowIndex": 1
						});
						var checkBoxGroup_4 = new cpr.controls.CheckBoxGroup();
						checkBoxGroup_4.colCount = -1;
						checkBoxGroup_4.fixedWidth = false;
						checkBoxGroup_4.style.setClasses(["text-center"]);
						(function(checkBoxGroup_4){
							checkBoxGroup_4.addItem(new cpr.controls.Item("체크박스", "value1"));
							checkBoxGroup_4.addItem(new cpr.controls.Item("체크박스", "value2"));
							checkBoxGroup_4.addItem(new cpr.controls.Item("체크박스", "value3"));
						})(checkBoxGroup_4);
						container.addChild(checkBoxGroup_4, {
							"colIndex": 1,
							"rowIndex": 1
						});
						var output_91 = new cpr.controls.Output();
						container.addChild(output_91, {
							"colIndex": 2,
							"rowIndex": 1
						});
					})(group_18);
					container.addChild(group_18, {
						"autoSize": "height",
						"width": "400px",
						"height": "72px"
					});
				})(group_17);
				container.addChild(group_17, {
					"autoSize": "height",
					"width": "1544px",
					"height": "189px"
				});
			})(group_16);
			container.addChild(group_16, {
				"autoSize": "height",
				"width": "1644px",
				"height": "272px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "[디자인가이드] 체크박스/체크박스그룹";
	cpr.core.Platform.INSTANCE.register(app);
})();
